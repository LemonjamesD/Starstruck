var searchIndex = JSON.parse('{\
"proc_macro2":{"doc":"github crates-io docs-rs","t":"NNNEDNDNNDDNNNDNEDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDCLLLLLLLLLLLLLL","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[231,"proc_macro2::extra"],[246,"proc_macro2::token_stream"],[262,"core::cmp"],[263,"core::marker"],[264,"core::convert"],[265,"core::iter::traits::collect"],[266,"core::fmt"],[267,"core::fmt"],[268,"proc_macro"],[269,"core::hash"],[270,"core::option"],[271,"alloc::string"],[272,"core::ops::range"],[273,"core::any"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[11,10,10,0,0,8,0,8,11,0,0,8,10,10,0,8,0,0,0,0,1,23,7,6,8,9,10,1,11,12,5,23,7,6,8,9,10,1,11,12,5,5,6,5,7,6,8,9,10,1,11,12,5,7,6,8,9,10,1,11,12,5,12,7,9,9,10,11,12,12,10,11,12,7,7,0,5,5,5,5,23,23,7,7,6,8,8,9,9,10,1,1,11,12,12,5,5,23,7,7,7,6,6,8,8,8,8,8,9,10,1,11,12,5,7,7,7,5,12,5,5,5,5,5,5,5,5,5,5,23,7,6,8,9,10,1,11,12,5,7,7,5,5,6,6,6,7,9,1,12,12,12,6,8,9,1,12,5,6,1,23,8,9,1,12,5,9,9,9,5,5,7,6,8,9,10,1,11,12,5,23,7,8,9,1,12,5,0,23,7,6,8,9,10,1,11,12,5,23,7,6,8,9,10,1,11,12,5,23,7,6,8,9,10,1,11,12,5,5,5,5,5,5,5,5,5,5,5,6,5,5,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[3]]],5],[[],6],[2,5],[7,7],[6,6],[8,8],[9,9],[10,10],[1,1],[11,11],[12,12],[5,5],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[12,12],14],[[],7],[9,15],[9,10],[[10,10],16],[[11,11],16],[[12,-1],16,[17,[19,[18]]]],[[12,12],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[7,-1],13,20],[[7,-1],13,20],0,[21,5],[21,5],[22,5],[22,5],[[23,24],25],[[23,24],25],[[7,24],25],[[7,24],25],[[6,24],25],[[8,24],25],[[8,24],25],[[9,24],25],[[9,24],25],[[10,24],25],[[1,24],25],[[1,24],25],[[11,24],25],[[12,24],25],[[12,24],25],[[5,24],25],[[5,24],25],[-1,-1,[]],[8,7],[-1,-1,[]],[26,7],[27,6],[-1,-1,[]],[5,8],[-1,-1,[]],[9,8],[1,8],[12,8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,7,20],[-1,7,20],[18,[[28,[7,23]]]],[18,[[28,[5,23]]]],[[12,-1],13,29],[30,5],[30,5],[31,5],[31,5],[32,5],[32,5],[33,5],[33,5],[34,5],[34,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,35],[7,16],[36,5],[36,5],[[6,6],[[37,[6]]]],[[6,6],6],[[],6],[[],7],[[10,7],9],[[2,11],1],[[18,6],12],[[18,6],12],[[12,12],[[37,[14]]]],[[6,6],6],[[8,6],13],[[9,6],13],[[1,6],13],[[12,6],13],[[5,6],13],[6,[[37,[38]]]],[1,11],[23,6],[8,6],[9,6],[1,6],[12,6],[5,6],[9,6],[9,6],[9,7],[18,5],[[5,-1],[[37,[6]]],[[40,[39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],0,[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[42,5],[42,5],[43,5],[43,5],[44,5],[44,5],[45,5],[45,5],[3,5],[3,5],[6,27],[39,5],[39,5],0,[-1,-2,[],[]],[-1,-2,[],[]],[15,15],[[-1,-2],13,[],[]],[15,6],[[15,24],25],[-1,-1,[]],[-1,-2,[],[]],[15,6],[15,6],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[[-1,-2],13,[],[]],[[35,24],25],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,[[37,[8]]]],[35,[[13,[39,[37,[39]]]]]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,41,[]]],"c":[],"p":[[3,"Punct",0],[15,"char"],[15,"u8"],[15,"slice"],[3,"Literal",0],[3,"Span",0],[3,"TokenStream",0],[4,"TokenTree",0],[3,"Group",0],[4,"Delimiter",0],[4,"Spacing",0],[3,"Ident",0],[15,"tuple"],[4,"Ordering",262],[3,"DelimSpan",231],[15,"bool"],[8,"Sized",263],[15,"str"],[8,"AsRef",264],[8,"IntoIterator",265],[15,"f32"],[15,"f64"],[3,"LexError",0],[3,"Formatter",266],[6,"Result",266],[3,"TokenStream",267],[3,"Span",267],[4,"Result",268],[8,"Hasher",269],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter",246],[15,"isize"],[4,"Option",270],[3,"String",271],[15,"usize"],[8,"RangeBounds",272],[3,"TypeId",273],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"]]},\
"quote":{"doc":"github crates-io docs-rs","t":"IIIKKKKKOLLOOLLLLK","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"],[18,"proc_macro2"],[19,"core::convert"],[20,"core::iter::traits::collect"],[21,"core::fmt"],[22,"core::fmt"],[23,"proc_macro2"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,12,12,12,12,13,0,5,5,0,0,13,13,5,5,5],"f":[0,0,0,[[-1,-2],1,[],[[3,[2]]]],[[-1,-2],1,[],4],[[-1,-2,-3],1,[],4,5],[[-1,-2,-3],1,[],4,5],[[-1,6],7,[]],0,[-1,8,9],[-1,8,9],0,0,[-1,[[11,[10]]],[]],[-1,[[11,[10]]],[]],[-1,8,[]],[-1,8,[]],[[-1,8],1,[]]],"c":[],"p":[[15,"tuple"],[4,"TokenTree",18],[8,"Into",19],[8,"IntoIterator",20],[8,"ToTokens",0],[3,"Formatter",21],[6,"Result",21],[3,"TokenStream",18],[8,"Sized",22],[3,"Span",18],[4,"Option",23],[8,"TokenStreamExt",0],[8,"IdentFragment",0]]},\
"starstruck":{"doc":"","t":"DDLLLLALLALLLLAAALLLLLLLLANENNLLLLLLLLLLFFIIILKLKLCCDLLLMLLLLLDLLLLLLLL","n":["Engine","EngineBase","borrow","borrow","borrow_mut","borrow_mut","error","from","from","helpers","into","into","new","plugin_make","plugins","prelude","renderer","run","start","try_from","try_from","try_into","try_into","type_id","type_id","vulkan_instance","Custom","EngineError","Unknown","VulkanError","borrow","borrow_mut","fmt","fmt","from","into","to_string","try_from","try_into","type_id","make_api_version","make_version","EngineCleanup","EngineObject","EnginePlugin","cleanup","object_make","object_run","plugin_make","plugin_run","Engine","EngineError","Renderer","borrow","borrow_mut","from","instance","into","new","try_from","try_into","type_id","VulkanInstancePlugin","borrow","borrow_mut","from","into","plugin_make","try_from","try_into","type_id"],"q":[[0,"starstruck"],[26,"starstruck::error"],[40,"starstruck::helpers"],[42,"starstruck::plugins"],[50,"starstruck::prelude"],[52,"starstruck::renderer"],[62,"starstruck::vulkan_instance"],[71,"core::result"],[72,"core::any"],[73,"core::fmt"],[74,"core::fmt"]],"d":["","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Called when the engine needs to cleanup an object/plugin","A physical object in the game that has state that the …","A plugin is just a piece of code that runs and interacts …","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Makes a vulkan instance and manages the state around it","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","",""],"i":[0,0,1,2,1,2,0,1,2,0,1,2,1,2,0,0,0,1,1,1,2,1,2,1,2,0,7,0,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,14,15,15,16,16,0,0,0,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[2,1],3],0,0,0,[1,4],[1,1],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[7,8],9],[[7,8],9],[-1,-1,[]],[-1,-2,[],[]],[-1,10,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[[11,11,11,11],11],[[11,11,11],11],0,0,0,[[-1,1],3,[]],[[-1,1,-2],3,[],[]],[[-1,1,-2],3,[],[]],[[-1,1],3,[]],[[-1,1],3,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],0,[-1,-2,[],[]],[[],12],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[13,1],3],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]]],"c":[],"p":[[3,"Engine",0],[3,"EngineBase",0],[15,"tuple"],[15,"never"],[4,"Result",71],[3,"TypeId",72],[4,"EngineError",26],[3,"Formatter",73],[6,"Result",73],[3,"String",74],[15,"u32"],[3,"Renderer",52],[3,"VulkanInstancePlugin",62],[8,"EngineCleanup",42],[8,"EngineObject",42],[8,"EnginePlugin",42]]},\
"syn":{"doc":"github crates-io docs-rs","t":"DNNNNDNNNDNDNNEDNNDDENNNNNNNNNDNNNNNNNNNNNNDDNNNEDDDNNDNNNNNDEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDNEEDDNNNEEDNNNDNDNDNNNNNNNNDNNNNDNENDDDDDDDNNDNNENNEEDDNNNNNNNNNNNNNNNNNNNNDDNNNEDDDNNDNNNNNNNNGNENNNNNNENNNNONDENNNNNDENNNNDDDDDDDDDEDDDDDDDENNNNNNDNNNNDEDENNMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMOMMMMOALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLMMOOMLLLMMMMMMMMMMMMMMMMLLLLLMMMMMLLLLMMMMMAMMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMMMMMMLLLLMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMLMMMMLMMMMMMMLMAMMMMMMMMMLLLLLLLLLLLLMMMMMMMMMMMMMMOAFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLOLLLLLOOFLLLLLLMMMMMMMMMMMAMMLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMALMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLLLLMMMMMMMMMLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKSKDLLLLMLLFMLLLLNDDDNQIDGIIGDLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIKKNDDDDEDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDIDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Abi","Add","AddAssign","And","AngleBracketed","AngleBracketedGenericArguments","Array","Array","Assign","AssocConst","AssocConst","AssocType","AssocType","Async","AttrStyle","Attribute","Await","BareFn","BareFnArg","BareVariadic","BinOp","Binary","BitAnd","BitAndAssign","BitOr","BitOrAssign","BitXor","BitXorAssign","Block","Bool","BoundLifetimes","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closure","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Cooked","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivAssign","Enum","Eq","Err","Error","Expr","ExprArray","ExprAssign","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprConst","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprInfer","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","Field","Field","FieldMutability","Fields","FieldsNamed","FieldsUnnamed","Float","ForLoop","Ge","GenericArgument","GenericParam","Generics","Group","Group","Gt","Ident","If","ImplGenerics","ImplTrait","Index","Index","Infer","Infer","Inherited","Inner","Int","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeParam","List","Lit","Lit","LitBool","LitByte","LitByteStr","LitChar","LitFloat","LitInt","LitStr","Loop","Lt","Macro","Macro","Macro","MacroDelimiter","Match","Maybe","Member","Meta","MetaList","MetaNameValue","MethodCall","Mul","MulAssign","NameValue","Named","Named","Ne","Neg","Never","None","None","None","Not","Ok","Or","Outer","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Path","Path","Path","Path","PathArguments","PathSegment","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Raw","Reference","Reference","Rem","RemAssign","Repeat","Restricted","Result","Return","ReturnType","Shl","ShlAssign","Shr","ShrAssign","Slice","Str","StrStyle","Struct","Struct","Sub","SubAssign","Token","Trait","TraitBound","TraitBoundModifier","TraitObject","Try","TryBlock","Tuple","Tuple","Turbofish","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","UnOp","Unary","Union","Unit","Unnamed","Unnamed","Unsafe","Variant","Verbatim","Verbatim","Verbatim","Verbatim","VisRestricted","Visibility","WhereClause","WherePredicate","While","Yield","abi","and_token","apostrophe","args","args","arguments","as_token","as_token","as_turbofish","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","bang_token","bang_token","base","base10_digits","base10_digits","base10_parse","base10_parse","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","buffer","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","const_params","const_params_mut","const_token","const_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","delimiter","delimiter","discriminant","dot_token","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","enum_token","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","equivalent","equivalent","equivalent","equivalent","expr","expr","expr","expr","expr","ext","extern_token","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","hash","hash","hash","hash","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","impl_token","in_token","index","index","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","is_none","iter","iter_mut","leading_colon","left","len","len","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","lit","lt_token","lt_token","lt_token","lt_token","mac","mac","make_where_clause","member","meta","meta","modifier","mutability","mutability","mutability","name","name","name","named","new","new","new","new","new","new","new","new","new","new","new","new_raw","op","op","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args","parse_args_with","parse_args_with","parse_body","parse_body_with","parse_inner","parse_macro_input","parse_mod_style","parse_named","parse_nested_meta","parse_nested_meta","parse_outer","parse_quote","parse_quote_spanned","parse_str","parse_unnamed","parse_with","partial_cmp","partial_cmp","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","punctuated","qself","qself","require_ident","require_list","require_name_value","require_path_only","right","segments","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","struct_token","style","suffix","suffix","suffix","suffix","suffix","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","tokens","tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","underscore_token","union_token","unnamed","unraw","unsafety","value","value","value","value","value","value","value","value","variadic","variants","vis","vis","where_clause","where_token","without_plus","without_plus","without_plus","without_plus","Cursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","empty","eof","eq","equivalent","from","from","group","ident","into","into","lifetime","literal","new","new2","partial_cmp","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","ParseNestedMeta","borrow","borrow_mut","error","from","input","into","parse_nested_meta","parser","path","try_from","try_into","type_id","value","Err","Error","Lookahead1","Nothing","Ok","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","error","error","error","extend","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_any_delimiter","parse_str","parse_terminated","peek","peek","peek2","peek3","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AnyDelimiter","Speculative","advance_to","parse_any_delimiter","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","default","empty_or_trailing","extend","extend","first","first_mut","from","from","from","from","from","from","from","from","from_iter","from_iter","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","pop_punct","punct","punct_mut","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","Spanned","span","Abstract","And","AndAnd","AndEq","As","Async","At","Auto","Await","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Comma","Const","Continue","Crate","Default","Do","Dollar","Dot","DotDot","DotDotDot","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Minus","MinusEq","Mod","Move","Mut","Ne","Not","Or","OrEq","OrOr","Override","Paren","PathSep","Percent","PercentEq","Plus","PlusEq","Pound","Priv","Pub","Question","RArrow","Ref","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Slash","SlashEq","Star","StarEq","Static","Struct","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"syn"],[2089,"syn::buffer"],[2124,"syn::ext"],[2128,"syn::meta"],[2142,"syn::parse"],[2238,"syn::parse::discouraged"],[2242,"syn::punctuated"],[2404,"syn::spanned"],[2406,"syn::token"],[4091,"core::str::traits"],[4092,"core::cmp"],[4093,"core::convert"],[4094,"core::marker"],[4095,"core::fmt"],[4096,"core::fmt"],[4097,"core::fmt"],[4098,"core::convert"],[4099,"core::hash"],[4100,"proc_macro2"],[4101,"proc_macro2"],[4102,"core::ops::function"],[4103,"proc_macro2::extra"],[4104,"alloc::string"],[4105,"core::any"],[4106,"proc_macro2"],[4107,"proc_macro2"],[4108,"core::ops::function"],[4109,"core::default"]],"d":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","An equality constraint on an associated constant: the …","An equality constraint on an associated constant: the …","A binding (equality constraint) on an associated type: the …","A binding (equality constraint) on an associated type: the …","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute, like <code>#[repr(transparent)]</code>.","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","The variadic argument of a function pointer like …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A const generic parameter: <code>const LENGTH: usize</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","An ordinary string like <code>&quot;data&quot;</code>.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","","The <code>==</code> operator (equality)","Contains the error value","Error returned when a Syn parser cannot parse the input …","A Rust expression.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","A blocked scope: <code>{ ... }</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","Unused, but reserved for RFC 3323 restrictions.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A for loop: <code>for pat in expr { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","An expression contained within invisible delimiters.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","A word of Rust code, which may be a keyword or legal …","An <code>if</code> expression with an optional <code>else</code> block: …","Returned by <code>Generics::split_for_impl</code>.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","A lifetime parameter: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A character literal: <code>&#39;a&#39;</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro in the type position.","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","The never type: <code>!</code>.","","","","The <code>!</code> operator for logical inversion","Contains the success value","The <code>||</code> operator (logical or)","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path like <code>std::slice::Iter</code>, optionally qualified with a …","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A raw string like <code>r##&quot;data&quot;##</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An array literal constructed from one repeated element: …","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A dynamically sized slice type: <code>[T]</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","The style of a string literal, either plain quoted or a …","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple type: <code>(A, B, C, String)</code>.","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A type argument.","A particular type is returned.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A tuple type: <code>(A, B, C, String)</code>.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","An enum variant.","Tokens in expression position not interpreted by Syn.","","A raw token literal not interpreted by Syn.","Tokens in type position not interpreted by Syn.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","Parse a set of curly braces and expose their content to …","","","","","Parse a set of square brackets and expose their content to …","A stably addressed token buffer supporting efficient …eturns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","","","","","","","","","Explicit discriminant: <code>Variant = 1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension traits to provide parsing methods on foreign …","","Content stored in the variant.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","If this path consists of a single ident, returns the ident.","","","","","","","","","","","","Name of the variant.","Name of the field, if any.","","","","","","","","","","","","<code>(A, B)</code>","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","Returns the number of fields.","","","","","Returns an Iterator&lt;Item = &amp;LifetimeParam&gt; over the …","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeParam&gt; over the …","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","Facility for interpreting structured content inside of an …","","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","<code>C</code>","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","See <code>Attribute::parse_args</code>.","Parse the arguments to the attribute using the given …","See <code>Attribute::parse_args_with</code>.","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parse a <code>Path</code> containing no path arguments on any of its …","Parses a named (braced struct) field.","Parse the arguments to the attribute, expecting it to …","See <code>Attribute::parse_nested_meta</code>.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a string of Rust code into the chosen syntax tree …","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","","","Returns the path that identifies the interpretation of …","Returns the path that begins this structured meta item.","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","An error if this path is not a single ident, as defined in …","Error if this is a <code>Meta::Path</code> or <code>Meta::NameValue</code>.","Error if this is a <code>Meta::Path</code> or <code>Meta::List</code>.","Error if this is a <code>Meta::List</code> or <code>Meta::NameValue</code>.","","","","","Configures the span of this <code>Ident</code>, possibly changing its …","","","","","","","","","","","","","","Returns the span of this <code>Ident</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…okens representing Rust punctuation, keywords, and …eturns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","","","","","","","In some positions, types may not contain the <code>+</code> character, …","","","","A cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","","If the cursor is pointing at a <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Context for parsing a single property in the conventional …","","","Report that the attribute’s content did not conform to …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Used when parsing <code>list(...)</code> syntax <strong>if</strong> the content inside …","Make a parser that is usable with <code>parse_macro_input!</code> in a …","","","","","Used when parsing <code>key = &quot;value&quot;</code> syntax.","Contains the error value","Error returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","Contains the success value","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","Forks a parse stream so that parsing tokens out of either …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","The source location of the error.","Returns the <code>Span</code> of the next token in the parse stream, or …","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support manipulating …","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","Returns the delimiter, the span of the delimiter token, …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","<strong>A punctuated sequence of syntax tree nodes of type <code>T</code> </strong>…","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Removes the trailing punctuation from this punctuated …","Borrows the punctuation from this punctuated pair, unless …","Mutably borrows the punctuation from this punctuated pair, …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>become</code>","<code>box</code>","<code>{</code>…<code>}</code>","<code>[</code>…<code>]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>-</code>","<code>-=</code>","<code>mod</code>","<code>move</code>","<code>mut</code>","<code>!=</code>","<code>!</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(</code>…<code>)</code>","<code>::</code>","<code>%</code>","<code>%=</code>","<code>+</code>","<code>+=</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>/</code>","<code>/=</code>","<code>*</code>","<code>*=</code>","<code>static</code>","<code>struct</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,61,61,61,65,0,26,76,26,0,66,0,66,26,0,0,26,76,0,0,0,26,61,61,61,61,61,61,26,53,0,60,60,26,53,53,26,26,53,26,26,41,66,0,0,66,26,281,0,0,0,0,94,62,0,61,61,22,61,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,53,26,61,0,0,0,26,76,61,0,26,0,76,0,26,26,76,73,12,53,61,26,0,41,46,50,66,0,13,0,26,0,0,0,0,0,0,0,26,61,0,26,76,0,26,48,0,0,0,0,26,61,61,13,17,38,61,62,76,48,65,75,62,6,61,12,26,60,76,65,0,0,13,26,76,0,0,0,0,76,73,0,26,281,26,76,61,61,26,73,0,26,0,61,61,61,61,76,53,0,22,26,61,61,0,46,0,0,76,26,26,26,76,0,0,41,50,66,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,22,17,17,38,26,0,26,46,53,76,0,0,0,0,26,26,78,87,10,28,67,64,29,72,1,16,20,21,27,28,29,30,31,32,33,34,35,36,37,42,43,44,92,93,59,83,30,3,5,3,5,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,136,135,127,131,27,134,119,28,29,133,112,130,30,129,31,118,32,121,114,33,122,34,115,113,35,36,116,126,124,111,110,123,132,120,37,117,128,125,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,3,5,58,281,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,136,135,127,131,27,134,119,28,29,133,112,130,30,129,31,118,32,121,114,33,122,34,115,113,35,36,116,126,124,111,110,123,132,120,37,117,128,125,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,3,5,58,281,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,52,42,43,51,52,70,80,89,18,24,0,11,32,77,88,0,0,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,3,5,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,3,5,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,9,10,67,20,42,43,44,51,52,70,93,40,40,44,86,0,0,21,40,45,65,43,44,14,59,16,30,93,89,77,79,84,86,87,88,90,24,9,9,10,38,39,15,43,44,68,69,9,10,38,39,29,31,32,35,37,0,91,16,23,25,9,9,9,10,38,39,3,5,78,45,8,1,2,9,9,9,9,9,9,9,10,11,12,13,13,13,13,14,15,16,17,17,17,18,19,20,21,22,23,24,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,136,135,127,131,27,134,119,28,29,133,112,130,30,129,31,118,32,121,114,33,122,34,115,113,35,36,116,126,124,111,110,123,132,120,37,117,128,125,38,38,38,38,39,39,40,41,41,41,41,42,43,43,44,45,46,46,46,47,48,49,50,50,50,51,52,53,53,53,53,53,53,53,53,54,55,56,57,3,3,5,5,58,281,59,60,61,62,63,63,64,64,65,66,67,68,69,70,71,72,73,74,75,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,28,21,68,69,70,63,31,79,40,45,67,72,9,10,38,39,10,16,20,21,43,44,64,68,69,70,80,74,32,39,71,78,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,136,135,127,131,27,134,119,28,29,133,112,130,30,129,31,118,32,121,114,33,122,34,115,113,35,36,116,126,124,111,110,123,132,120,37,117,128,125,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,3,5,58,281,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,17,17,17,17,65,63,65,17,17,63,27,17,77,42,51,87,40,45,47,52,78,40,33,40,45,67,72,34,82,40,30,0,11,47,20,86,87,91,92,93,18,9,10,42,53,54,55,56,57,3,5,58,9,27,37,71,78,40,19,28,35,47,71,74,78,84,90,0,0,0,9,10,13,14,15,16,18,19,21,26,33,34,36,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,54,55,56,57,3,5,58,59,61,62,63,64,66,67,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,0,9,11,14,11,14,59,59,11,0,63,20,11,14,11,0,0,0,20,54,9,10,11,13,14,15,36,47,59,74,85,72,11,49,74,0,36,85,63,13,13,13,27,63,23,77,9,10,53,54,55,56,57,3,5,58,8,1,2,9,9,9,10,10,11,13,14,15,16,17,18,19,20,21,26,136,135,127,131,27,134,119,28,29,133,112,130,30,129,31,118,32,121,114,33,122,34,115,113,35,36,116,126,124,111,110,123,132,120,37,117,128,125,38,38,39,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,53,54,54,55,55,56,56,57,57,3,3,5,5,58,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,39,58,0,40,86,23,11,53,54,55,56,57,3,5,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,3,5,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,9,10,3,5,8,1,2,9,10,11,13,14,15,16,17,18,19,20,21,26,136,135,127,131,27,134,119,28,29,133,112,130,30,129,31,118,32,121,114,33,122,34,115,113,35,36,116,126,124,111,110,123,132,120,37,117,128,125,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,3,5,58,59,61,62,63,64,65,66,67,68,69,70,71,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,0,54,55,56,57,3,5,58,14,59,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,136,135,127,131,27,134,119,28,29,133,112,130,30,129,31,118,32,121,114,33,122,34,115,113,35,36,116,126,124,111,110,123,132,120,37,117,128,125,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,3,5,58,281,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,136,135,127,131,27,134,119,28,29,133,112,130,30,129,31,118,32,121,114,33,122,34,115,113,35,36,116,126,124,111,110,123,132,120,37,117,128,125,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,3,5,58,281,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,20,29,44,68,72,92,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,136,135,127,131,27,134,119,28,29,133,112,130,30,129,31,118,32,121,114,33,122,34,115,113,35,36,116,126,124,111,110,123,132,120,37,117,128,125,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,3,5,58,281,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,40,40,81,25,19,9,78,54,55,56,57,58,15,58,69,78,24,20,21,40,49,76,80,89,94,0,0,158,158,159,158,159,159,159,159,159,159,159,158,159,159,159,158,159,159,159,158,158,159,159,159,159,159,159,158,159,158,159,158,159,0,282,282,282,0,163,163,163,163,163,163,163,0,163,163,163,163,163,6,0,0,0,6,152,0,0,0,0,0,0,0,166,164,168,166,167,172,164,168,166,167,172,166,164,167,164,167,164,166,167,0,166,168,166,167,164,164,164,166,166,166,164,164,168,166,167,172,164,168,166,167,172,164,164,164,166,166,164,164,149,166,152,172,152,166,152,166,168,166,166,166,164,166,166,164,164,167,164,166,164,168,166,167,172,164,168,166,167,172,164,168,166,167,172,0,0,283,284,180,0,0,0,0,0,0,0,0,180,173,177,182,178,179,142,143,180,173,177,182,178,179,142,143,180,173,173,177,178,179,142,180,173,173,177,178,179,142,180,180,173,173,173,173,173,173,173,177,182,178,179,142,143,180,173,173,173,173,173,173,177,182,178,179,142,143,180,173,173,173,177,182,178,179,142,143,173,180,180,173,173,173,173,173,173,177,182,178,179,142,143,173,180,177,182,178,179,142,143,177,182,178,179,142,143,173,173,173,173,173,173,173,173,180,180,173,173,173,177,182,178,179,142,143,173,180,173,177,178,179,142,180,173,180,173,173,177,182,178,179,142,143,180,173,177,182,178,179,142,143,180,173,177,182,178,179,142,143,180,180,180,0,285,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,184,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,184,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,184,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,184,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,104,232,235,236,238,239,240,241,245,249,252,253,256,257,261,263,265,266,268,273,275,277,104,232,235,236,238,239,240,241,245,249,252,253,256,257,261,263,265,266,268,273,275,277,184,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,184,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,184,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,278,279,280,104,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,184,278,279,280,184,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,184,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,184,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,184,104,185,186,187,188,189,190,191,192,193,194,109,195,196,197,198,199,108,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,106,107,218,219,105,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280],"fc":[],"p":[[3,"TypeGenerics",0],[3,"Turbofish",0],[3,"LitInt",0],[15,"str"],[3,"LitFloat",0],[6,"Result",2142],[8,"FromStr",4091],[3,"ImplGenerics",0],[3,"Ident",0],[3,"Lifetime",0],[3,"Attribute",0],[4,"AttrStyle",0],[4,"Meta",0],[3,"MetaList",0],[3,"MetaNameValue",0],[3,"Variant",0],[4,"Fields",0],[3,"FieldsNamed",0],[3,"FieldsUnnamed",0],[3,"Field",0],[3,"DeriveInput",0],[4,"Data",0],[3,"DataStruct",0],[3,"DataEnum",0],[3,"DataUnion",0],[4,"Expr",0],[3,"ExprBinary",0],[3,"ExprCall",0],[3,"ExprCast",0],[3,"ExprField",0],[3,"ExprGroup",0],[3,"ExprIndex",0],[3,"ExprLit",0],[3,"ExprMacro",0],[3,"ExprParen",0],[3,"ExprPath",0],[3,"ExprUnary",0],[4,"Member",0],[3,"Index",0],[3,"Generics",0],[4,"GenericParam",0],[3,"LifetimeParam",0],[3,"TypeParam",0],[3,"ConstParam",0],[3,"BoundLifetimes",0],[4,"TypeParamBound",0],[3,"TraitBound",0],[4,"TraitBoundModifier",0],[3,"WhereClause",0],[4,"WherePredicate",0],[3,"PredicateLifetime",0],[3,"PredicateType",0],[4,"Lit",0],[3,"LitStr",0],[3,"LitByteStr",0],[3,"LitByte",0],[3,"LitChar",0],[3,"LitBool",0],[3,"Macro",0],[4,"MacroDelimiter",0],[4,"BinOp",0],[4,"UnOp",0],[3,"Path",0],[3,"PathSegment",0],[4,"PathArguments",0],[4,"GenericArgument",0],[3,"AngleBracketedGenericArguments",0],[3,"AssocType",0],[3,"AssocConst",0],[3,"Constraint",0],[3,"ParenthesizedGenericArguments",0],[3,"QSelf",0],[4,"Visibility",0],[3,"VisRestricted",0],[4,"FieldMutability",0],[4,"Type",0],[3,"TypeArray",0],[3,"TypeBareFn",0],[3,"TypeGroup",0],[3,"TypeImplTrait",0],[3,"TypeInfer",0],[3,"TypeMacro",0],[3,"TypeNever",0],[3,"TypeParen",0],[3,"TypePath",0],[3,"TypePtr",0],[3,"TypeReference",0],[3,"TypeSlice",0],[3,"TypeTraitObject",0],[3,"TypeTuple",0],[3,"Abi",0],[3,"BareFnArg",0],[3,"BareVariadic",0],[4,"ReturnType",0],[15,"tuple"],[4,"Ordering",4092],[15,"bool"],[8,"AsRef",4093],[8,"Sized",4094],[3,"Formatter",4095],[3,"Error",4095],[4,"Result",4096],[6,"Result",4095],[3,"Underscore",2406],[3,"Super",2406],[3,"SelfType",2406],[3,"SelfValue",2406],[3,"Extern",2406],[3,"Crate",2406],[3,"ExprStruct",0],[3,"ExprReturn",0],[3,"ExprConst",0],[3,"ExprMethodCall",0],[3,"ExprLet",0],[3,"ExprMatch",0],[3,"ExprRange",0],[3,"ExprUnsafe",0],[3,"ExprIf",0],[3,"ExprBreak",0],[3,"ExprTuple",0],[3,"ExprInfer",0],[3,"ExprLoop",0],[3,"ExprTry",0],[3,"ExprRepeat",0],[3,"ExprYield",0],[3,"ExprReference",0],[3,"ExprAsync",0],[3,"ExprWhile",0],[3,"ExprForLoop",0],[3,"ExprContinue",0],[3,"ExprAwait",0],[3,"ExprTryBlock",0],[3,"ExprClosure",0],[3,"ExprBlock",0],[3,"ExprAssign",0],[3,"ExprArray",0],[15,"usize"],[3,"Literal",4097],[8,"Into",4093],[4,"Option",4098],[8,"Hasher",4099],[3,"Iter",2242],[3,"IterMut",2242],[3,"Span",4097],[15,"u8"],[15,"slice"],[15,"char"],[3,"TokenStream",4100],[8,"Parse",2142],[6,"ParseStream",2142],[3,"TokenStream",4097],[8,"Parser",2142],[3,"Vec",4101],[8,"FnMut",4102],[3,"DelimSpan",4103],[3,"String",4104],[3,"TypeId",4105],[3,"TokenBuffer",2089],[3,"Cursor",2089],[4,"Delimiter",4097],[3,"Punct",4097],[4,"TokenTree",4097],[3,"ParseNestedMeta",2128],[3,"Error",2142],[8,"Display",4095],[3,"ParseBuffer",2142],[3,"StepCursor",2142],[3,"Lookahead1",2142],[8,"IntoIterator",4106],[3,"LexError",4097],[8,"ToTokens",4107],[3,"Nothing",2142],[3,"Punctuated",2242],[8,"Peek",2142],[8,"FnOnce",4102],[8,"Clone",4108],[3,"Pairs",2242],[3,"IntoPairs",2242],[3,"IntoIter",2242],[4,"Pair",2242],[8,"Default",4109],[3,"PairsMut",2242],[8,"Token",2406],[3,"Group",2406],[3,"Abstract",2406],[3,"As",2406],[3,"Async",2406],[3,"Auto",2406],[3,"Await",2406],[3,"Become",2406],[3,"Box",2406],[3,"Break",2406],[3,"Const",2406],[3,"Continue",2406],[3,"Default",2406],[3,"Do",2406],[3,"Dyn",2406],[3,"Else",2406],[3,"Enum",2406],[3,"Final",2406],[3,"Fn",2406],[3,"For",2406],[3,"If",2406],[3,"Impl",2406],[3,"In",2406],[3,"Let",2406],[3,"Loop",2406],[3,"Macro",2406],[3,"Match",2406],[3,"Mod",2406],[3,"Move",2406],[3,"Mut",2406],[3,"Override",2406],[3,"Priv",2406],[3,"Pub",2406],[3,"Ref",2406],[3,"Return",2406],[3,"Static",2406],[3,"Struct",2406],[3,"Trait",2406],[3,"Try",2406],[3,"Type",2406],[3,"Typeof",2406],[3,"Union",2406],[3,"Unsafe",2406],[3,"Unsized",2406],[3,"Use",2406],[3,"Virtual",2406],[3,"Where",2406],[3,"While",2406],[3,"Yield",2406],[3,"And",2406],[3,"AndAnd",2406],[3,"AndEq",2406],[3,"At",2406],[3,"Caret",2406],[3,"CaretEq",2406],[3,"Colon",2406],[3,"Comma",2406],[3,"Dollar",2406],[3,"Dot",2406],[3,"DotDot",2406],[3,"DotDotDot",2406],[3,"DotDotEq",2406],[3,"Eq",2406],[3,"EqEq",2406],[3,"FatArrow",2406],[3,"Ge",2406],[3,"Gt",2406],[3,"LArrow",2406],[3,"Le",2406],[3,"Lt",2406],[3,"Minus",2406],[3,"MinusEq",2406],[3,"Ne",2406],[3,"Not",2406],[3,"Or",2406],[3,"OrEq",2406],[3,"OrOr",2406],[3,"PathSep",2406],[3,"Percent",2406],[3,"PercentEq",2406],[3,"Plus",2406],[3,"PlusEq",2406],[3,"Pound",2406],[3,"Question",2406],[3,"RArrow",2406],[3,"Semi",2406],[3,"Shl",2406],[3,"ShlEq",2406],[3,"Shr",2406],[3,"ShrEq",2406],[3,"Slash",2406],[3,"SlashEq",2406],[3,"Star",2406],[3,"StarEq",2406],[3,"Tilde",2406],[3,"Brace",2406],[3,"Bracket",2406],[3,"Paren",2406],[4,"StrStyle",0],[8,"IdentExt",2124],[8,"Speculative",2238],[8,"AnyDelimiter",2238],[8,"Spanned",2404]]},\
"thiserror":{"doc":"github crates-io docs-rs","t":"Y","n":["Error"],"q":[[0,"thiserror"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"thiserror_impl":{"doc":"","t":"Y","n":["Error"],"q":[[0,"thiserror_impl"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":"FF","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"c":[],"p":[[15,"char"],[15,"bool"]]},\
"vk_sys":{"doc":"","t":"RRRRRRRRRRRRRRRRRRRRRRRRGGLMLMLMLMLMLMLMDGDDDGGGDGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLMLMLMDGGGGGDGGDDDDDGGGGDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDTDDTLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMGGGGDDDGGGGGGGGDGGGGDGGGDDLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDGGGGDGGDGDGGDDGGGDGDGDGDGGDGGDDGGLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMGGGDGDGDGLMDGGDGDDGGDDDDGDDDGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLMDLMLMLMLMLMGGDDDDDDGGDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGDGGLMGGGDDGGDLMLMLMGGLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGDGGGDDGGDDDGDDDDDDGGGGGGDGDGGGDDGLMRRRRRRRRRRRRRRRRRDGRRRRRRRRRRRRDDDGDLMDDDDDDDDGGGGGDDDLMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGDDGGGGGGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGDGDGDDGDGDDGDGDDGDDDDGDDDDDGDGDGDGDDGDGDDDDGGDGDGDDDGGGGGDGDGDGGGDGDGDGGDGDGDGDGGGDGDGDGDGDDGDRRRRRRRRRRRRRRRRRRRRRRRRRGGGGGGDGGGGLMDDGGLMLMLMRRDDLMGDGDLMLMLMLMLMGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGGGGDGGGDLMLMLMGGDGGGDGGDDDDDDDGGDDDGGGDGGDGDDGDDDDGGGGDGGRRLMRLMLMLMRRDDGGDDRLMGDGDDGDGDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["ACCESS_COLOR_ATTACHMENT_READ_BIT","ACCESS_COLOR_ATTACHMENT_WRITE_BIT","ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT","ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT","ACCESS_HOST_READ_BIT","ACCESS_HOST_WRITE_BIT","ACCESS_INDEX_READ_BIT","ACCESS_INDIRECT_COMMAND_READ_BIT","ACCESS_INPUT_ATTACHMENT_READ_BIT","ACCESS_MEMORY_READ_BIT","ACCESS_MEMORY_WRITE_BIT","ACCESS_SHADER_READ_BIT","ACCESS_SHADER_WRITE_BIT","ACCESS_TRANSFER_READ_BIT","ACCESS_TRANSFER_WRITE_BIT","ACCESS_UNIFORM_READ_BIT","ACCESS_VERTEX_ATTRIBUTE_READ_BIT","ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT","ATTACHMENT_LOAD_OP_CLEAR","ATTACHMENT_LOAD_OP_DONT_CARE","ATTACHMENT_LOAD_OP_LOAD","ATTACHMENT_STORE_OP_DONT_CARE","ATTACHMENT_STORE_OP_STORE","ATTACHMENT_UNUSED","AccessFlagBits","AccessFlags","AcquireFullScreenExclusiveModeEXT","AcquireFullScreenExclusiveModeEXT","AcquireNextImageKHR","AcquireNextImageKHR","ActivateMoltenVKLicenseMVK","ActivateMoltenVKLicenseMVK","ActivateMoltenVKLicensesMVK","ActivateMoltenVKLicensesMVK","AllocateCommandBuffers","AllocateCommandBuffers","AllocateDescriptorSets","AllocateDescriptorSets","AllocateMemory","AllocateMemory","AllocationCallbacks","AndroidSurfaceCreateFlagsKHR","AndroidSurfaceCreateInfoKHR","ApplicationInfo","AttachmentDescription","AttachmentDescriptionFlagBits","AttachmentDescriptionFlags","AttachmentLoadOp","AttachmentReference","AttachmentStoreOp","BLEND_FACTOR_CONSTANT_ALPHA","BLEND_FACTOR_CONSTANT_COLOR","BLEND_FACTOR_DST_ALPHA","BLEND_FACTOR_DST_COLOR","BLEND_FACTOR_ONE","BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA","BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR","BLEND_FACTOR_ONE_MINUS_DST_ALPHA","BLEND_FACTOR_ONE_MINUS_DST_COLOR","BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA","BLEND_FACTOR_ONE_MINUS_SRC1_COLOR","BLEND_FACTOR_ONE_MINUS_SRC_ALPHA","BLEND_FACTOR_ONE_MINUS_SRC_COLOR","BLEND_FACTOR_SRC1_ALPHA","BLEND_FACTOR_SRC1_COLOR","BLEND_FACTOR_SRC_ALPHA","BLEND_FACTOR_SRC_ALPHA_SATURATE","BLEND_FACTOR_SRC_COLOR","BLEND_FACTOR_ZERO","BLEND_OP_ADD","BLEND_OP_MAX","BLEND_OP_MIN","BLEND_OP_REVERSE_SUBTRACT","BLEND_OP_SUBTRACT","BORDER_COLOR_FLOAT_OPAQUE_BLACK","BORDER_COLOR_FLOAT_OPAQUE_WHITE","BORDER_COLOR_FLOAT_TRANSPARENT_BLACK","BORDER_COLOR_INT_OPAQUE_BLACK","BORDER_COLOR_INT_OPAQUE_WHITE","BORDER_COLOR_INT_TRANSPARENT_BLACK","BUFFER_CREATE_SPARSE_ALIASED_BIT","BUFFER_CREATE_SPARSE_BINDING_BIT","BUFFER_CREATE_SPARSE_RESIDENCY_BIT","BUFFER_USAGE_INDEX_BUFFER_BIT","BUFFER_USAGE_INDIRECT_BUFFER_BIT","BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT","BUFFER_USAGE_STORAGE_BUFFER_BIT","BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT","BUFFER_USAGE_TRANSFER_DST_BIT","BUFFER_USAGE_TRANSFER_SRC_BIT","BUFFER_USAGE_UNIFORM_BUFFER_BIT","BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT","BUFFER_USAGE_VERTEX_BUFFER_BIT","BeginCommandBuffer","BeginCommandBuffer","BindBufferMemory","BindBufferMemory","BindImageMemory","BindImageMemory","BindSparseInfo","BlendFactor","BlendOp","Bool32","BorderColor","Buffer","BufferCopy","BufferCreateFlagBits","BufferCreateFlags","BufferCreateInfo","BufferDeviceAddressInfo","BufferImageCopy","BufferMemoryBarrier","BufferMemoryRequirementsInfo2KHR","BufferUsageFlagBits","BufferUsageFlags","BufferView","BufferViewCreateFlags","BufferViewCreateInfo","COLOR_COMPONENT_A_BIT","COLOR_COMPONENT_B_BIT","COLOR_COMPONENT_G_BIT","COLOR_COMPONENT_R_BIT","COLOR_SPACE_ADOBERGB_LINEAR_EXT","COLOR_SPACE_ADOBERGB_NONLINEAR_EXT","COLOR_SPACE_BT2020_LINEAR_EXT","COLOR_SPACE_BT709_LINEAR_EXT","COLOR_SPACE_BT709_NONLINEAR_EXT","COLOR_SPACE_DCI_P3_LINEAR_EXT","COLOR_SPACE_DCI_P3_NONLINEAR_EXT","COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT","COLOR_SPACE_DOLBYVISION_EXT","COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT","COLOR_SPACE_HDR10_HLG_EXT","COLOR_SPACE_HDR10_ST2084_EXT","COLOR_SPACE_PASS_THROUGH_EXT","COLOR_SPACE_SRGB_NONLINEAR_KHR","COMMAND_BUFFER_LEVEL_PRIMARY","COMMAND_BUFFER_LEVEL_SECONDARY","COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT","COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT","COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT","COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT","COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT","COMMAND_POOL_CREATE_TRANSIENT_BIT","COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT","COMPARE_OP_ALWAYS","COMPARE_OP_EQUAL","COMPARE_OP_GREATER","COMPARE_OP_GREATER_OR_EQUAL","COMPARE_OP_LESS","COMPARE_OP_LESS_OR_EQUAL","COMPARE_OP_NEVER","COMPARE_OP_NOT_EQUAL","COMPONENT_SWIZZLE_A","COMPONENT_SWIZZLE_B","COMPONENT_SWIZZLE_G","COMPONENT_SWIZZLE_IDENTITY","COMPONENT_SWIZZLE_ONE","COMPONENT_SWIZZLE_R","COMPONENT_SWIZZLE_ZERO","COMPOSITE_ALPHA_INHERIT_BIT_KHR","COMPOSITE_ALPHA_OPAQUE_BIT_KHR","COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR","COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR","CULL_MODE_BACK_BIT","CULL_MODE_FRONT_AND_BACK","CULL_MODE_FRONT_BIT","CULL_MODE_NONE","ClearAttachment","ClearColorValue","ClearDepthStencilValue","ClearRect","ClearValue","CmdBeginDebugUtilsLabelEXT","CmdBeginDebugUtilsLabelEXT","CmdBeginQuery","CmdBeginQuery","CmdBeginRenderPass","CmdBeginRenderPass","CmdBindDescriptorSets","CmdBindDescriptorSets","CmdBindIndexBuffer","CmdBindIndexBuffer","CmdBindPipeline","CmdBindPipeline","CmdBindVertexBuffers","CmdBindVertexBuffers","CmdBlitImage","CmdBlitImage","CmdClearAttachments","CmdClearAttachments","CmdClearColorImage","CmdClearColorImage","CmdClearDepthStencilImage","CmdClearDepthStencilImage","CmdCopyBuffer","CmdCopyBuffer","CmdCopyBufferToImage","CmdCopyBufferToImage","CmdCopyImage","CmdCopyImage","CmdCopyImageToBuffer","CmdCopyImageToBuffer","CmdCopyQueryPoolResults","CmdCopyQueryPoolResults","CmdDispatch","CmdDispatch","CmdDispatchIndirect","CmdDispatchIndirect","CmdDraw","CmdDraw","CmdDrawIndexed","CmdDrawIndexed","CmdDrawIndexedIndirect","CmdDrawIndexedIndirect","CmdDrawIndirect","CmdDrawIndirect","CmdEndDebugUtilsLabelEXT","CmdEndDebugUtilsLabelEXT","CmdEndQuery","CmdEndQuery","CmdEndRenderPass","CmdEndRenderPass","CmdExecuteCommands","CmdExecuteCommands","CmdFillBuffer","CmdFillBuffer","CmdInsertDebugUtilsLabelEXT","CmdInsertDebugUtilsLabelEXT","CmdNextSubpass","CmdNextSubpass","CmdPipelineBarrier","CmdPipelineBarrier","CmdPushConstants","CmdPushConstants","CmdPushDescriptorSetKHR","CmdPushDescriptorSetKHR","CmdPushDescriptorSetWithTemplateKHR","CmdPushDescriptorSetWithTemplateKHR","CmdResetEvent","CmdResetEvent","CmdResetQueryPool","CmdResetQueryPool","CmdResolveImage","CmdResolveImage","CmdSetBlendConstants","CmdSetBlendConstants","CmdSetDepthBias","CmdSetDepthBias","CmdSetDepthBounds","CmdSetDepthBounds","CmdSetEvent","CmdSetEvent","CmdSetLineWidth","CmdSetLineWidth","CmdSetScissor","CmdSetScissor","CmdSetStencilCompareMask","CmdSetStencilCompareMask","CmdSetStencilReference","CmdSetStencilReference","CmdSetStencilWriteMask","CmdSetStencilWriteMask","CmdSetViewport","CmdSetViewport","CmdUpdateBuffer","CmdUpdateBuffer","CmdWaitEvents","CmdWaitEvents","CmdWriteTimestamp","CmdWriteTimestamp","ColorComponentFlagBits","ColorComponentFlags","ColorSpaceKHR","CommandBuffer","CommandBufferAllocateInfo","CommandBufferBeginInfo","CommandBufferInheritanceInfo","CommandBufferLevel","CommandBufferResetFlagBits","CommandBufferResetFlags","CommandBufferUsageFlagBits","CommandBufferUsageFlags","CommandPool","CommandPoolCreateFlagBits","CommandPoolCreateFlags","CommandPoolCreateInfo","CommandPoolResetFlagBits","CommandPoolResetFlags","CommandPoolTrimFlagsKHR","CompareOp","ComponentMapping","ComponentSwizzle","CompositeAlphaFlagBitsKHR","CompositeAlphaFlagsKHR","ComputePipelineCreateInfo","CopyDescriptorSet","CreateAndroidSurfaceKHR","CreateAndroidSurfaceKHR","CreateBuffer","CreateBuffer","CreateBufferView","CreateBufferView","CreateCommandPool","CreateCommandPool","CreateComputePipelines","CreateComputePipelines","CreateDebugUtilsMessengerEXT","CreateDebugUtilsMessengerEXT","CreateDescriptorPool","CreateDescriptorPool","CreateDescriptorSetLayout","CreateDescriptorSetLayout","CreateDescriptorUpdateTemplateKHR","CreateDescriptorUpdateTemplateKHR","CreateDevice","CreateDevice","CreateDisplayModeKHR","CreateDisplayModeKHR","CreateDisplayPlaneSurfaceKHR","CreateDisplayPlaneSurfaceKHR","CreateEvent","CreateEvent","CreateFence","CreateFence","CreateFramebuffer","CreateFramebuffer","CreateGraphicsPipelines","CreateGraphicsPipelines","CreateIOSSurfaceMVK","CreateIOSSurfaceMVK","CreateImage","CreateImage","CreateImageView","CreateImageView","CreateInstance","CreateInstance","CreateMacOSSurfaceMVK","CreateMacOSSurfaceMVK","CreatePipelineCache","CreatePipelineCache","CreatePipelineLayout","CreatePipelineLayout","CreateQueryPool","CreateQueryPool","CreateRenderPass","CreateRenderPass","CreateSampler","CreateSampler","CreateSemaphore","CreateSemaphore","CreateShaderModule","CreateShaderModule","CreateSharedSwapchainsKHR","CreateSharedSwapchainsKHR","CreateSwapchainKHR","CreateSwapchainKHR","CreateViSurfaceNN","CreateViSurfaceNN","CreateWaylandSurfaceKHR","CreateWaylandSurfaceKHR","CreateWin32SurfaceKHR","CreateWin32SurfaceKHR","CreateXcbSurfaceKHR","CreateXcbSurfaceKHR","CreateXlibSurfaceKHR","CreateXlibSurfaceKHR","CullModeFlagBits","CullModeFlags","DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT","DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT","DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT","DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT","DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT","DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT","DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT","DEPENDENCY_BY_REGION_BIT","DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT","DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR","DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER","DESCRIPTOR_TYPE_INPUT_ATTACHMENT","DESCRIPTOR_TYPE_SAMPLED_IMAGE","DESCRIPTOR_TYPE_SAMPLER","DESCRIPTOR_TYPE_STORAGE_BUFFER","DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC","DESCRIPTOR_TYPE_STORAGE_IMAGE","DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER","DESCRIPTOR_TYPE_UNIFORM_BUFFER","DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC","DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER","DESCRIPTOR_UPDATE_TEMPLATE_TYPE_BEGIN_RANGE_KHR","DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR","DESCRIPTOR_UPDATE_TEMPLATE_TYPE_END_RANGE_KHR","DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR","DESCRIPTOR_UPDATE_TEMPLATE_TYPE_RANGE_SIZE_KHR","DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR","DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR","DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR","DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR","DYNAMIC_STATE_BLEND_CONSTANTS","DYNAMIC_STATE_DEPTH_BIAS","DYNAMIC_STATE_DEPTH_BOUNDS","DYNAMIC_STATE_LINE_WIDTH","DYNAMIC_STATE_SCISSOR","DYNAMIC_STATE_STENCIL_COMPARE_MASK","DYNAMIC_STATE_STENCIL_REFERENCE","DYNAMIC_STATE_STENCIL_WRITE_MASK","DYNAMIC_STATE_VIEWPORT","DebugUtilsLabelEXT","DebugUtilsMessageSeverityFlagBitsEXT","DebugUtilsMessageSeverityFlagsEXT","DebugUtilsMessageTypeFlagBitsEXT","DebugUtilsMessageTypeFlagsEXT","DebugUtilsMessengerCallbackDataEXT","DebugUtilsMessengerCallbackDataFlagsEXT","DebugUtilsMessengerCreateFlagsEXT","DebugUtilsMessengerCreateInfoEXT","DebugUtilsMessengerEXT","DebugUtilsObjectNameInfoEXT","DependencyFlagBits","DependencyFlags","DescriptorBufferInfo","DescriptorImageInfo","DescriptorPool","DescriptorPoolCreateFlagBits","DescriptorPoolCreateFlags","DescriptorPoolCreateInfo","DescriptorPoolResetFlags","DescriptorPoolSize","DescriptorSet","DescriptorSetAllocateInfo","DescriptorSetLayout","DescriptorSetLayoutBinding","DescriptorSetLayoutCreateFlagBits","DescriptorSetLayoutCreateFlags","DescriptorSetLayoutCreateInfo","DescriptorType","DescriptorUpdateTemplateCreateFlagsKHR","DescriptorUpdateTemplateCreateInfoKHR","DescriptorUpdateTemplateEntryKHR","DescriptorUpdateTemplateKHR","DescriptorUpdateTemplateTypeKHR","DestroyBuffer","DestroyBuffer","DestroyBufferView","DestroyBufferView","DestroyCommandPool","DestroyCommandPool","DestroyDebugUtilsMessengerEXT","DestroyDebugUtilsMessengerEXT","DestroyDescriptorPool","DestroyDescriptorPool","DestroyDescriptorSetLayout","DestroyDescriptorSetLayout","DestroyDescriptorUpdateTemplateKHR","DestroyDescriptorUpdateTemplateKHR","DestroyDevice","DestroyDevice","DestroyEvent","DestroyEvent","DestroyFence","DestroyFence","DestroyFramebuffer","DestroyFramebuffer","DestroyImage","DestroyImage","DestroyImageView","DestroyImageView","DestroyInstance","DestroyInstance","DestroyPipeline","DestroyPipeline","DestroyPipelineCache","DestroyPipelineCache","DestroyPipelineLayout","DestroyPipelineLayout","DestroyQueryPool","DestroyQueryPool","DestroyRenderPass","DestroyRenderPass","DestroySampler","DestroySampler","DestroySemaphore","DestroySemaphore","DestroyShaderModule","DestroyShaderModule","DestroySurfaceKHR","DestroySurfaceKHR","DestroySwapchainKHR","DestroySwapchainKHR","Device","DeviceAddress","DeviceCreateFlags","DeviceCreateInfo","DeviceMemory","DevicePointers","DeviceQueueCreateFlags","DeviceQueueCreateInfo","DeviceSize","DeviceWaitIdle","DeviceWaitIdle","DispatchIndirectCommand","DisplayKHR","DisplayModeCreateFlagsKHR","DisplayModeCreateInfoKHR","DisplayModeKHR","DisplayModeParametersKHR","DisplayModePropertiesKHR","DisplayPlaneAlphaFlagBitsKHR","DisplayPlaneAlphaFlagsKHR","DisplayPlaneCapabilitiesKHR","DisplayPlanePropertiesKHR","DisplayPresentInfoKHR","DisplayPropertiesKHR","DisplaySurfaceCreateFlagsKHR","DisplaySurfaceCreateInfoKHR","DrawIndexedIndirectCommand","DrawIndirectCommand","DynamicState","ERROR_DEVICE_LOST","ERROR_EXTENSION_NOT_PRESENT","ERROR_FEATURE_NOT_PRESENT","ERROR_FORMAT_NOT_SUPPORTED","ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT","ERROR_INCOMPATIBLE_DISPLAY_KHR","ERROR_INCOMPATIBLE_DRIVER","ERROR_INITIALIZATION_FAILED","ERROR_INVALID_SHADER_NV","ERROR_LAYER_NOT_PRESENT","ERROR_MEMORY_MAP_FAILED","ERROR_NATIVE_WINDOW_IN_USE_KHR","ERROR_OUT_OF_DATE_KHR","ERROR_OUT_OF_DEVICE_MEMORY","ERROR_OUT_OF_HOST_MEMORY","ERROR_OUT_OF_POOL_MEMORY_KHR","ERROR_SURFACE_LOST_KHR","ERROR_TOO_MANY_OBJECTS","ERROR_VALIDATION_FAILED_EXT","EVENT_RESET","EVENT_SET","EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID","EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT","EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR","EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT","EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR","EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT","EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR","EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT","EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR","EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT","EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT","EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT","EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT","EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR","EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT","EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR","EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT","EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR","EndCommandBuffer","EndCommandBuffer","EntryPoints","EnumerateDeviceExtensionProperties","EnumerateDeviceExtensionProperties","EnumerateDeviceLayerProperties","EnumerateDeviceLayerProperties","EnumerateInstanceExtensionProperties","EnumerateInstanceExtensionProperties","EnumerateInstanceLayerProperties","EnumerateInstanceLayerProperties","EnumeratePhysicalDevices","EnumeratePhysicalDevices","Event","EventCreateFlags","EventCreateInfo","ExportMemoryAllocateInfo","ExtensionProperties","Extent2D","Extent3D","ExternalMemoryBufferCreateInfo","ExternalMemoryHandleTypeFlagBits","ExternalMemoryHandleTypeFlags","ExternalMemoryImageCreateInfo","FALSE","FENCE_CREATE_SIGNALED_BIT","FILTER_LINEAR","FILTER_NEAREST","FORMAT_A1R5G5B5_UNORM_PACK16","FORMAT_A2B10G10R10_SINT_PACK32","FORMAT_A2B10G10R10_SNORM_PACK32","FORMAT_A2B10G10R10_SSCALED_PACK32","FORMAT_A2B10G10R10_UINT_PACK32","FORMAT_A2B10G10R10_UNORM_PACK32","FORMAT_A2B10G10R10_USCALED_PACK32","FORMAT_A2R10G10B10_SINT_PACK32","FORMAT_A2R10G10B10_SNORM_PACK32","FORMAT_A2R10G10B10_SSCALED_PACK32","FORMAT_A2R10G10B10_UINT_PACK32","FORMAT_A2R10G10B10_UNORM_PACK32","FORMAT_A2R10G10B10_USCALED_PACK32","FORMAT_A4B4G4R4_UNORM_PACK16_EXT","FORMAT_A4R4G4B4_UNORM_PACK16_EXT","FORMAT_A8B8G8R8_SINT_PACK32","FORMAT_A8B8G8R8_SNORM_PACK32","FORMAT_A8B8G8R8_SRGB_PACK32","FORMAT_A8B8G8R8_SSCALED_PACK32","FORMAT_A8B8G8R8_UINT_PACK32","FORMAT_A8B8G8R8_UNORM_PACK32","FORMAT_A8B8G8R8_USCALED_PACK32","FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT","FORMAT_ASTC_10x10_SRGB_BLOCK","FORMAT_ASTC_10x10_UNORM_BLOCK","FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT","FORMAT_ASTC_10x5_SRGB_BLOCK","FORMAT_ASTC_10x5_UNORM_BLOCK","FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT","FORMAT_ASTC_10x6_SRGB_BLOCK","FORMAT_ASTC_10x6_UNORM_BLOCK","FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT","FORMAT_ASTC_10x8_SRGB_BLOCK","FORMAT_ASTC_10x8_UNORM_BLOCK","FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT","FORMAT_ASTC_12x10_SRGB_BLOCK","FORMAT_ASTC_12x10_UNORM_BLOCK","FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT","FORMAT_ASTC_12x12_SRGB_BLOCK","FORMAT_ASTC_12x12_UNORM_BLOCK","FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT","FORMAT_ASTC_4x4_SRGB_BLOCK","FORMAT_ASTC_4x4_UNORM_BLOCK","FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT","FORMAT_ASTC_5x4_SRGB_BLOCK","FORMAT_ASTC_5x4_UNORM_BLOCK","FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT","FORMAT_ASTC_5x5_SRGB_BLOCK","FORMAT_ASTC_5x5_UNORM_BLOCK","FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT","FORMAT_ASTC_6x5_SRGB_BLOCK","FORMAT_ASTC_6x5_UNORM_BLOCK","FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT","FORMAT_ASTC_6x6_SRGB_BLOCK","FORMAT_ASTC_6x6_UNORM_BLOCK","FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT","FORMAT_ASTC_8x5_SRGB_BLOCK","FORMAT_ASTC_8x5_UNORM_BLOCK","FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT","FORMAT_ASTC_8x6_SRGB_BLOCK","FORMAT_ASTC_8x6_UNORM_BLOCK","FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT","FORMAT_ASTC_8x8_SRGB_BLOCK","FORMAT_ASTC_8x8_UNORM_BLOCK","FORMAT_B10G11R11_UFLOAT_PACK32","FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16","FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR","FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16","FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR","FORMAT_B16G16R16G16_422_UNORM","FORMAT_B16G16R16G16_422_UNORM_KHR","FORMAT_B4G4R4A4_UNORM_PACK16","FORMAT_B5G5R5A1_UNORM_PACK16","FORMAT_B5G6R5_UNORM_PACK16","FORMAT_B8G8R8A8_SINT","FORMAT_B8G8R8A8_SNORM","FORMAT_B8G8R8A8_SRGB","FORMAT_B8G8R8A8_SSCALED","FORMAT_B8G8R8A8_UINT","FORMAT_B8G8R8A8_UNORM","FORMAT_B8G8R8A8_USCALED","FORMAT_B8G8R8G8_422_UNORM","FORMAT_B8G8R8G8_422_UNORM_KHR","FORMAT_B8G8R8_SINT","FORMAT_B8G8R8_SNORM","FORMAT_B8G8R8_SRGB","FORMAT_B8G8R8_SSCALED","FORMAT_B8G8R8_UINT","FORMAT_B8G8R8_UNORM","FORMAT_B8G8R8_USCALED","FORMAT_BC1_RGBA_SRGB_BLOCK","FORMAT_BC1_RGBA_UNORM_BLOCK","FORMAT_BC1_RGB_SRGB_BLOCK","FORMAT_BC1_RGB_UNORM_BLOCK","FORMAT_BC2_SRGB_BLOCK","FORMAT_BC2_UNORM_BLOCK","FORMAT_BC3_SRGB_BLOCK","FORMAT_BC3_UNORM_BLOCK","FORMAT_BC4_SNORM_BLOCK","FORMAT_BC4_UNORM_BLOCK","FORMAT_BC5_SNORM_BLOCK","FORMAT_BC5_UNORM_BLOCK","FORMAT_BC6H_SFLOAT_BLOCK","FORMAT_BC6H_UFLOAT_BLOCK","FORMAT_BC7_SRGB_BLOCK","FORMAT_BC7_UNORM_BLOCK","FORMAT_D16_UNORM","FORMAT_D16_UNORM_S8_UINT","FORMAT_D24_UNORM_S8_UINT","FORMAT_D32_SFLOAT","FORMAT_D32_SFLOAT_S8_UINT","FORMAT_E5B9G9R9_UFLOAT_PACK32","FORMAT_EAC_R11G11_SNORM_BLOCK","FORMAT_EAC_R11G11_UNORM_BLOCK","FORMAT_EAC_R11_SNORM_BLOCK","FORMAT_EAC_R11_UNORM_BLOCK","FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK","FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK","FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK","FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK","FORMAT_ETC2_R8G8B8_SRGB_BLOCK","FORMAT_ETC2_R8G8B8_UNORM_BLOCK","FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR","FORMAT_FEATURE_BLIT_DST_BIT","FORMAT_FEATURE_BLIT_SRC_BIT","FORMAT_FEATURE_COLOR_ATTACHMENT_BIT","FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT","FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT","FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR","FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT","FORMAT_FEATURE_DISJOINT_BIT","FORMAT_FEATURE_DISJOINT_BIT_KHR","FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT","FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT","FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR","FORMAT_FEATURE_SAMPLED_IMAGE_BIT","FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT","FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG","FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT","FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT","FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT","FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT","FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR","FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT","FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR","FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT","FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR","FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT","FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR","FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT","FORMAT_FEATURE_STORAGE_IMAGE_BIT","FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT","FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT","FORMAT_FEATURE_TRANSFER_DST_BIT","FORMAT_FEATURE_TRANSFER_DST_BIT_KHR","FORMAT_FEATURE_TRANSFER_SRC_BIT","FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR","FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT","FORMAT_FEATURE_VERTEX_BUFFER_BIT","FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16","FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR","FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16","FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR","FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16","FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR","FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16","FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR","FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16","FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR","FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16","FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR","FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16","FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR","FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16","FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR","FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16","FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR","FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16","FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR","FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16","FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR","FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16","FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR","FORMAT_G16B16G16R16_422_UNORM","FORMAT_G16B16G16R16_422_UNORM_KHR","FORMAT_G16_B16R16_2PLANE_420_UNORM","FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR","FORMAT_G16_B16R16_2PLANE_422_UNORM","FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR","FORMAT_G16_B16_R16_3PLANE_420_UNORM","FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR","FORMAT_G16_B16_R16_3PLANE_422_UNORM","FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR","FORMAT_G16_B16_R16_3PLANE_444_UNORM","FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR","FORMAT_G8B8G8R8_422_UNORM","FORMAT_G8B8G8R8_422_UNORM_KHR","FORMAT_G8_B8R8_2PLANE_420_UNORM","FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR","FORMAT_G8_B8R8_2PLANE_422_UNORM","FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR","FORMAT_G8_B8_R8_3PLANE_420_UNORM","FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR","FORMAT_G8_B8_R8_3PLANE_422_UNORM","FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR","FORMAT_G8_B8_R8_3PLANE_444_UNORM","FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR","FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG","FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG","FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG","FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG","FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG","FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG","FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG","FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG","FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16","FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR","FORMAT_R10X6G10X6_UNORM_2PACK16","FORMAT_R10X6G10X6_UNORM_2PACK16_KHR","FORMAT_R10X6_UNORM_PACK16","FORMAT_R10X6_UNORM_PACK16_KHR","FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16","FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR","FORMAT_R12X4G12X4_UNORM_2PACK16","FORMAT_R12X4G12X4_UNORM_2PACK16_KHR","FORMAT_R12X4_UNORM_PACK16","FORMAT_R12X4_UNORM_PACK16_KHR","FORMAT_R16G16B16A16_SFLOAT","FORMAT_R16G16B16A16_SINT","FORMAT_R16G16B16A16_SNORM","FORMAT_R16G16B16A16_SSCALED","FORMAT_R16G16B16A16_UINT","FORMAT_R16G16B16A16_UNORM","FORMAT_R16G16B16A16_USCALED","FORMAT_R16G16B16_SFLOAT","FORMAT_R16G16B16_SINT","FORMAT_R16G16B16_SNORM","FORMAT_R16G16B16_SSCALED","FORMAT_R16G16B16_UINT","FORMAT_R16G16B16_UNORM","FORMAT_R16G16B16_USCALED","FORMAT_R16G16_SFLOAT","FORMAT_R16G16_SINT","FORMAT_R16G16_SNORM","FORMAT_R16G16_SSCALED","FORMAT_R16G16_UINT","FORMAT_R16G16_UNORM","FORMAT_R16G16_USCALED","FORMAT_R16_SFLOAT","FORMAT_R16_SINT","FORMAT_R16_SNORM","FORMAT_R16_SSCALED","FORMAT_R16_UINT","FORMAT_R16_UNORM","FORMAT_R16_USCALED","FORMAT_R32G32B32A32_SFLOAT","FORMAT_R32G32B32A32_SINT","FORMAT_R32G32B32A32_UINT","FORMAT_R32G32B32_SFLOAT","FORMAT_R32G32B32_SINT","FORMAT_R32G32B32_UINT","FORMAT_R32G32_SFLOAT","FORMAT_R32G32_SINT","FORMAT_R32G32_UINT","FORMAT_R32_SFLOAT","FORMAT_R32_SINT","FORMAT_R32_UINT","FORMAT_R4G4B4A4_UNORM_PACK16","FORMAT_R4G4_UNORM_PACK8","FORMAT_R5G5B5A1_UNORM_PACK16","FORMAT_R5G6B5_UNORM_PACK16","FORMAT_R64G64B64A64_SFLOAT","FORMAT_R64G64B64A64_SINT","FORMAT_R64G64B64A64_UINT","FORMAT_R64G64B64_SFLOAT","FORMAT_R64G64B64_SINT","FORMAT_R64G64B64_UINT","FORMAT_R64G64_SFLOAT","FORMAT_R64G64_SINT","FORMAT_R64G64_UINT","FORMAT_R64_SFLOAT","FORMAT_R64_SINT","FORMAT_R64_UINT","FORMAT_R8G8B8A8_SINT","FORMAT_R8G8B8A8_SNORM","FORMAT_R8G8B8A8_SRGB","FORMAT_R8G8B8A8_SSCALED","FORMAT_R8G8B8A8_UINT","FORMAT_R8G8B8A8_UNORM","FORMAT_R8G8B8A8_USCALED","FORMAT_R8G8B8_SINT","FORMAT_R8G8B8_SNORM","FORMAT_R8G8B8_SRGB","FORMAT_R8G8B8_SSCALED","FORMAT_R8G8B8_UINT","FORMAT_R8G8B8_UNORM","FORMAT_R8G8B8_USCALED","FORMAT_R8G8_SINT","FORMAT_R8G8_SNORM","FORMAT_R8G8_SRGB","FORMAT_R8G8_SSCALED","FORMAT_R8G8_UINT","FORMAT_R8G8_UNORM","FORMAT_R8G8_USCALED","FORMAT_R8_SINT","FORMAT_R8_SNORM","FORMAT_R8_SRGB","FORMAT_R8_SSCALED","FORMAT_R8_UINT","FORMAT_R8_UNORM","FORMAT_R8_USCALED","FORMAT_S8_UINT","FORMAT_UNDEFINED","FORMAT_X8_D24_UNORM_PACK32","FRONT_FACE_CLOCKWISE","FRONT_FACE_COUNTER_CLOCKWISE","FULL_SCREEN_EXCLUSIVE_ALLOWED_EXT","FULL_SCREEN_EXCLUSIVE_APPLICATION_CONTROLLED_EXT","FULL_SCREEN_EXCLUSIVE_DEFAUlT_EXT","FULL_SCREEN_EXCLUSIVE_DISALLOWED_EXT","FULL_SCREEN_EXCLUSIVE_MAX_ENUM_EXT","Fence","FenceCreateFlagBits","FenceCreateFlags","FenceCreateInfo","Filter","Flags","FlushMappedMemoryRanges","FlushMappedMemoryRanges","Format","FormatFeatureFlagBits","FormatFeatureFlags","FormatProperties","FormatProperties2KHR","Framebuffer","FramebufferCreateFlags","FramebufferCreateInfo","FreeCommandBuffers","FreeCommandBuffers","FreeDescriptorSets","FreeDescriptorSets","FreeMemory","FreeMemory","FrontFace","FullScreenExclusiveEXT","GetBufferDeviceAddressEXT","GetBufferDeviceAddressEXT","GetBufferMemoryRequirements","GetBufferMemoryRequirements","GetBufferMemoryRequirements2KHR","GetBufferMemoryRequirements2KHR","GetDeviceMemoryCommitment","GetDeviceMemoryCommitment","GetDeviceProcAddr","GetDeviceProcAddr","GetDeviceQueue","GetDeviceQueue","GetDisplayModePropertiesKHR","GetDisplayModePropertiesKHR","GetDisplayPlaneCapabilitiesKHR","GetDisplayPlaneCapabilitiesKHR","GetDisplayPlaneSupportedDisplaysKHR","GetDisplayPlaneSupportedDisplaysKHR","GetEventStatus","GetEventStatus","GetFenceStatus","GetFenceStatus","GetImageMemoryRequirements","GetImageMemoryRequirements","GetImageMemoryRequirements2KHR","GetImageMemoryRequirements2KHR","GetImageSparseMemoryRequirements","GetImageSparseMemoryRequirements","GetImageSubresourceLayout","GetImageSubresourceLayout","GetInstanceProcAddr","GetInstanceProcAddr","GetMemoryFdKHR","GetMemoryFdKHR","GetMemoryFdPropertiesKHR","GetMemoryFdPropertiesKHR","GetMoltenVKDeviceConfigurationMVK","GetMoltenVKDeviceConfigurationMVK","GetPhysicalDeviceDisplayPlanePropertiesKHR","GetPhysicalDeviceDisplayPlanePropertiesKHR","GetPhysicalDeviceDisplayPropertiesKHR","GetPhysicalDeviceDisplayPropertiesKHR","GetPhysicalDeviceFeatures","GetPhysicalDeviceFeatures","GetPhysicalDeviceFeatures2KHR","GetPhysicalDeviceFeatures2KHR","GetPhysicalDeviceFormatProperties","GetPhysicalDeviceFormatProperties","GetPhysicalDeviceFormatProperties2KHR","GetPhysicalDeviceFormatProperties2KHR","GetPhysicalDeviceImageFormatProperties","GetPhysicalDeviceImageFormatProperties","GetPhysicalDeviceImageFormatProperties2KHR","GetPhysicalDeviceImageFormatProperties2KHR","GetPhysicalDeviceMemoryProperties","GetPhysicalDeviceMemoryProperties","GetPhysicalDeviceMemoryProperties2KHR","GetPhysicalDeviceMemoryProperties2KHR","GetPhysicalDeviceMetalFeaturesMVK","GetPhysicalDeviceMetalFeaturesMVK","GetPhysicalDeviceProperties","GetPhysicalDeviceProperties","GetPhysicalDeviceProperties2KHR","GetPhysicalDeviceProperties2KHR","GetPhysicalDeviceQueueFamilyProperties","GetPhysicalDeviceQueueFamilyProperties","GetPhysicalDeviceQueueFamilyProperties2KHR","GetPhysicalDeviceQueueFamilyProperties2KHR","GetPhysicalDeviceSparseImageFormatProperties","GetPhysicalDeviceSparseImageFormatProperties","GetPhysicalDeviceSparseImageFormatProperties2KHR","GetPhysicalDeviceSparseImageFormatProperties2KHR","GetPhysicalDeviceSurfaceCapabilitiesKHR","GetPhysicalDeviceSurfaceCapabilitiesKHR","GetPhysicalDeviceSurfaceFormatsKHR","GetPhysicalDeviceSurfaceFormatsKHR","GetPhysicalDeviceSurfacePresentModesKHR","GetPhysicalDeviceSurfacePresentModesKHR","GetPhysicalDeviceSurfaceSupportKHR","GetPhysicalDeviceSurfaceSupportKHR","GetPhysicalDeviceWaylandPresentationSupportKHR","GetPhysicalDeviceWaylandPresentationSupportKHR","GetPhysicalDeviceWin32PresentationSupportKHR","GetPhysicalDeviceWin32PresentationSupportKHR","GetPhysicalDeviceXcbPresentationSupportKHR","GetPhysicalDeviceXcbPresentationSupportKHR","GetPhysicalDeviceXlibPresentationSupportKHR","GetPhysicalDeviceXlibPresentationSupportKHR","GetPipelineCacheData","GetPipelineCacheData","GetQueryPoolResults","GetQueryPoolResults","GetRenderAreaGranularity","GetRenderAreaGranularity","GetSwapchainImagesKHR","GetSwapchainImagesKHR","GetSwapchainPerformanceMVK","GetSwapchainPerformanceMVK","GraphicsPipelineCreateInfo","IMAGE_ASPECT_COLOR_BIT","IMAGE_ASPECT_DEPTH_BIT","IMAGE_ASPECT_FLAG_BITS_MAX_ENUM","IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT","IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT","IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT","IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT","IMAGE_ASPECT_METADATA_BIT","IMAGE_ASPECT_PLANE_0_BIT","IMAGE_ASPECT_PLANE_0_BIT_KHR","IMAGE_ASPECT_PLANE_1_BIT","IMAGE_ASPECT_PLANE_1_BIT_KHR","IMAGE_ASPECT_PLANE_2_BIT","IMAGE_ASPECT_PLANE_2_BIT_KHR","IMAGE_ASPECT_STENCIL_BIT","IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR","IMAGE_CREATE_CUBE_COMPATIBLE_BIT","IMAGE_CREATE_MUTABLE_FORMAT_BIT","IMAGE_CREATE_SPARSE_ALIASED_BIT","IMAGE_CREATE_SPARSE_BINDING_BIT","IMAGE_CREATE_SPARSE_RESIDENCY_BIT","IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL","IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL","IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL","IMAGE_LAYOUT_GENERAL","IMAGE_LAYOUT_PREINITIALIZED","IMAGE_LAYOUT_PRESENT_SRC_KHR","IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL","IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL","IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL","IMAGE_LAYOUT_UNDEFINED","IMAGE_TILING_LINEAR","IMAGE_TILING_OPTIMAL","IMAGE_TYPE_1D","IMAGE_TYPE_2D","IMAGE_TYPE_3D","IMAGE_USAGE_COLOR_ATTACHMENT_BIT","IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT","IMAGE_USAGE_INPUT_ATTACHMENT_BIT","IMAGE_USAGE_SAMPLED_BIT","IMAGE_USAGE_STORAGE_BIT","IMAGE_USAGE_TRANSFER_DST_BIT","IMAGE_USAGE_TRANSFER_SRC_BIT","IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT","IMAGE_VIEW_TYPE_1D","IMAGE_VIEW_TYPE_1D_ARRAY","IMAGE_VIEW_TYPE_2D","IMAGE_VIEW_TYPE_2D_ARRAY","IMAGE_VIEW_TYPE_3D","IMAGE_VIEW_TYPE_CUBE","IMAGE_VIEW_TYPE_CUBE_ARRAY","INCOMPLETE","INDEX_TYPE_UINT16","INDEX_TYPE_UINT32","INTERNAL_ALLOCATION_TYPE_EXECUTABLE","IOSSurfaceCreateFlagsMVK","IOSSurfaceCreateInfoMVK","Image","ImageAspectFlagBits","ImageAspectFlags","ImageBlit","ImageCopy","ImageCreateFlagBits","ImageCreateFlags","ImageCreateInfo","ImageFormatProperties","ImageFormatProperties2KHR","ImageLayout","ImageMemoryBarrier","ImageMemoryRequirementsInfo2KHR","ImageResolve","ImageSubresource","ImageSubresourceLayers","ImageSubresourceRange","ImageTiling","ImageType","ImageUsageFlagBits","ImageUsageFlags","ImageView","ImageViewCreateFlags","ImageViewCreateInfo","ImageViewType","ImportMemoryFdInfoKHR","IndexType","Instance","InstanceCreateFlags","InstanceCreateInfo","InstancePointers","InternalAllocationType","InvalidateMappedMemoryRanges","InvalidateMappedMemoryRanges","LOD_CLAMP_NONE","LOGIC_OP_AND","LOGIC_OP_AND_INVERTED","LOGIC_OP_AND_REVERSE","LOGIC_OP_CLEAR","LOGIC_OP_COPY","LOGIC_OP_COPY_INVERTED","LOGIC_OP_EQUIVALENT","LOGIC_OP_INVERT","LOGIC_OP_NAND","LOGIC_OP_NOR","LOGIC_OP_NO_OP","LOGIC_OP_OR","LOGIC_OP_OR_INVERTED","LOGIC_OP_OR_REVERSE","LOGIC_OP_SET","LOGIC_OP_XOR","LayerProperties","LogicOp","MAX_DESCRIPTION_SIZE","MAX_EXTENSION_NAME_SIZE","MAX_MEMORY_HEAPS","MAX_MEMORY_TYPES","MAX_PHYSICAL_DEVICE_NAME_SIZE","MEMORY_HEAP_DEVICE_LOCAL_BIT","MEMORY_HEAP_MULTI_INSTANCE_BIT","MEMORY_PROPERTY_DEVICE_LOCAL_BIT","MEMORY_PROPERTY_HOST_CACHED_BIT","MEMORY_PROPERTY_HOST_COHERENT_BIT","MEMORY_PROPERTY_HOST_VISIBLE_BIT","MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT","MVKDeviceConfiguration","MVKPhysicalDeviceMetalFeatures","MVKSwapchainPerformance","MacOSSurfaceCreateFlagsMVK","MacOSSurfaceCreateInfoMVK","MapMemory","MapMemory","MappedMemoryRange","MemoryAllocateInfo","MemoryBarrier","MemoryDedicatedAllocateInfoKHR","MemoryDedicatedRequirementsKHR","MemoryFdPropertiesKHR","MemoryGetFdInfoKHR","MemoryHeap","MemoryHeapFlagBits","MemoryHeapFlags","MemoryMapFlags","MemoryPropertyFlagBits","MemoryPropertyFlags","MemoryRequirements","MemoryRequirements2KHR","MemoryType","MergePipelineCaches","MergePipelineCaches","NOT_READY","NULL_HANDLE","OBJECT_TYPE_ACCELERATION_STRUCTURE_NV","OBJECT_TYPE_BUFFER","OBJECT_TYPE_BUFFER_VIEW","OBJECT_TYPE_COMMAND_BUFFER","OBJECT_TYPE_COMMAND_POOL","OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT","OBJECT_TYPE_DESCRIPTOR_POOL","OBJECT_TYPE_DESCRIPTOR_SET","OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT","OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE","OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR","OBJECT_TYPE_DEVICE","OBJECT_TYPE_DEVICE_MEMORY","OBJECT_TYPE_DISPLAY_KHR","OBJECT_TYPE_DISPLAY_MODE_KHR","OBJECT_TYPE_EVENT","OBJECT_TYPE_FENCE","OBJECT_TYPE_FRAMEBUFFER","OBJECT_TYPE_IMAGE","OBJECT_TYPE_IMAGE_VIEW","OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX","OBJECT_TYPE_INSTANCE","OBJECT_TYPE_OBJECT_TABLE_NVX","OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL","OBJECT_TYPE_PHYSICAL_DEVICE","OBJECT_TYPE_PIPELINE","OBJECT_TYPE_PIPELINE_CACHE","OBJECT_TYPE_PIPELINE_LAYOUT","OBJECT_TYPE_QUERY_POOL","OBJECT_TYPE_QUEUE","OBJECT_TYPE_RENDER_PASS","OBJECT_TYPE_SAMPLER","OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION","OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR","OBJECT_TYPE_SEMAPHORE","OBJECT_TYPE_SHADER_MODULE","OBJECT_TYPE_SURFACE_KHR","OBJECT_TYPE_SWAPCHAIN_KHR","OBJECT_TYPE_UNKNOWN","OBJECT_TYPE_VALIDATION_CACHE_EXT","ObjectType","Offset2D","Offset3D","PFN_vkAllocationFunction","PFN_vkDebugUtilsMessengerCallbackEXT","PFN_vkFreeFunction","PFN_vkInternalAllocationNotification","PFN_vkInternalFreeNotification","PFN_vkReallocationFunction","PFN_vkVoidFunction","PHYSICAL_DEVICE_TYPE_CPU","PHYSICAL_DEVICE_TYPE_DISCRETE_GPU","PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU","PHYSICAL_DEVICE_TYPE_OTHER","PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU","PIPELINE_BIND_POINT_COMPUTE","PIPELINE_BIND_POINT_GRAPHICS","PIPELINE_CACHE_HEADER_VERSION_ONE","PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT","PIPELINE_CREATE_DERIVATIVE_BIT","PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT","PIPELINE_STAGE_ALL_COMMANDS_BIT","PIPELINE_STAGE_ALL_GRAPHICS_BIT","PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT","PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT","PIPELINE_STAGE_COMPUTE_SHADER_BIT","PIPELINE_STAGE_DRAW_INDIRECT_BIT","PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT","PIPELINE_STAGE_FRAGMENT_SHADER_BIT","PIPELINE_STAGE_GEOMETRY_SHADER_BIT","PIPELINE_STAGE_HOST_BIT","PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT","PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT","PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT","PIPELINE_STAGE_TOP_OF_PIPE_BIT","PIPELINE_STAGE_TRANSFER_BIT","PIPELINE_STAGE_VERTEX_INPUT_BIT","PIPELINE_STAGE_VERTEX_SHADER_BIT","POLYGON_MODE_FILL","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PRESENT_MODE_FIFO_KHR","PRESENT_MODE_FIFO_RELAXED_KHR","PRESENT_MODE_IMMEDIATE_KHR","PRESENT_MODE_MAILBOX_KHR","PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR","PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR","PRIMITIVE_TOPOLOGY_LINE_LIST","PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY","PRIMITIVE_TOPOLOGY_LINE_STRIP","PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY","PRIMITIVE_TOPOLOGY_PATCH_LIST","PRIMITIVE_TOPOLOGY_POINT_LIST","PRIMITIVE_TOPOLOGY_TRIANGLE_FAN","PRIMITIVE_TOPOLOGY_TRIANGLE_LIST","PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY","PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP","PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY","PhysicalDevice","PhysicalDevice16BitStorageFeatures","PhysicalDevice16BitStorageFeaturesKHR","PhysicalDevice8BitStorageFeatures","PhysicalDevice8BitStorageFeaturesKHR","PhysicalDeviceBufferAddressFeaturesEXT","PhysicalDeviceBufferDeviceAddressFeatures","PhysicalDeviceBufferDeviceAddressFeaturesKHR","PhysicalDeviceDescriptorIndexingFeatures","PhysicalDeviceDescriptorIndexingFeaturesEXT","PhysicalDeviceFeatures","PhysicalDeviceFeatures2","PhysicalDeviceFeatures2KHR","PhysicalDeviceHostQueryResetFeatures","PhysicalDeviceHostQueryResetFeaturesEXT","PhysicalDeviceImageFormatInfo2KHR","PhysicalDeviceImagelessFramebufferFeatures","PhysicalDeviceImagelessFramebufferFeaturesKHR","PhysicalDeviceLimits","PhysicalDeviceMemoryProperties","PhysicalDeviceMemoryProperties2KHR","PhysicalDeviceMultiviewFeatures","PhysicalDeviceMultiviewFeaturesKHR","PhysicalDeviceProperties","PhysicalDeviceProperties2KHR","PhysicalDeviceProtectedMemoryFeatures","PhysicalDevicePushDescriptorPropertiesKHR","PhysicalDeviceSamplerYcbcrConversionFeatures","PhysicalDeviceSamplerYcbcrConversionFeaturesKHR","PhysicalDeviceScalarBlockLayoutFeatures","PhysicalDeviceScalarBlockLayoutFeaturesEXT","PhysicalDeviceSeparateDepthStencilLayoutsFeatures","PhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR","PhysicalDeviceShaderAtomicInt64Features","PhysicalDeviceShaderAtomicInt64FeaturesKHR","PhysicalDeviceShaderDrawParametersFeatures","PhysicalDeviceShaderFloat16Int8Features","PhysicalDeviceShaderFloat16Int8FeaturesKHR","PhysicalDeviceShaderSubgroupExtendedTypesFeatures","PhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR","PhysicalDeviceSparseImageFormatInfo2KHR","PhysicalDeviceSparseProperties","PhysicalDeviceSubgroupProperties","PhysicalDeviceTimelineSemaphoreFeatures","PhysicalDeviceTimelineSemaphoreFeaturesKHR","PhysicalDeviceType","PhysicalDeviceUniformBufferStandardLayoutFeatures","PhysicalDeviceUniformBufferStandardLayoutFeaturesKHR","PhysicalDeviceVariablePointersFeatures","PhysicalDeviceVariablePointersFeaturesKHR","PhysicalDeviceVulkan11Features","PhysicalDeviceVulkan12Features","PhysicalDeviceVulkanMemoryModelFeatures","PhysicalDeviceVulkanMemoryModelFeaturesKHR","Pipeline","PipelineBindPoint","PipelineCache","PipelineCacheCreateFlags","PipelineCacheCreateInfo","PipelineCacheHeaderVersion","PipelineColorBlendAttachmentState","PipelineColorBlendStateCreateFlags","PipelineColorBlendStateCreateInfo","PipelineCreateFlagBits","PipelineCreateFlags","PipelineDepthStencilStateCreateFlags","PipelineDepthStencilStateCreateInfo","PipelineDynamicStateCreateFlags","PipelineDynamicStateCreateInfo","PipelineInputAssemblyStateCreateFlags","PipelineInputAssemblyStateCreateInfo","PipelineLayout","PipelineLayoutCreateFlags","PipelineLayoutCreateInfo","PipelineMultisampleStateCreateFlags","PipelineMultisampleStateCreateInfo","PipelineRasterizationStateCreateFlags","PipelineRasterizationStateCreateInfo","PipelineShaderStageCreateFlags","PipelineShaderStageCreateInfo","PipelineStageFlagBits","PipelineStageFlags","PipelineTessellationStateCreateFlags","PipelineTessellationStateCreateInfo","PipelineVertexInputStateCreateFlags","PipelineVertexInputStateCreateInfo","PipelineViewportStateCreateFlags","PipelineViewportStateCreateInfo","PolygonMode","PresentInfoKHR","PresentModeKHR","PresentRegionKHR","PresentRegionsKHR","PrimitiveTopology","PushConstantRange","QUERY_CONTROL_PRECISE_BIT","QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT","QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT","QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT","QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT","QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT","QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT","QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT","QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT","QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT","QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT","QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT","QUERY_RESULT_64_BIT","QUERY_RESULT_PARTIAL_BIT","QUERY_RESULT_WAIT_BIT","QUERY_RESULT_WITH_AVAILABILITY_BIT","QUERY_TYPE_OCCLUSION","QUERY_TYPE_PIPELINE_STATISTICS","QUERY_TYPE_TIMESTAMP","QUEUE_COMPUTE_BIT","QUEUE_FAMILY_EXTERNAL","QUEUE_FAMILY_IGNORED","QUEUE_GRAPHICS_BIT","QUEUE_SPARSE_BINDING_BIT","QUEUE_TRANSFER_BIT","QueryControlFlagBits","QueryControlFlags","QueryPipelineStatisticFlagBits","QueryPipelineStatisticFlags","QueryPool","QueryPoolCreateFlags","QueryPoolCreateInfo","QueryResultFlagBits","QueryResultFlags","QueryType","Queue","QueueBindSparse","QueueBindSparse","QueueFamilyProperties","QueueFamilyProperties2KHR","QueueFlagBits","QueueFlags","QueuePresentKHR","QueuePresentKHR","QueueSubmit","QueueSubmit","QueueWaitIdle","QueueWaitIdle","REMAINING_ARRAY_LAYERS","REMAINING_MIP_LEVELS","Rect2D","RectLayerKHR","ReleaseFullScreenExclusiveModeEXT","ReleaseFullScreenExclusiveModeEXT","RenderPass","RenderPassBeginInfo","RenderPassCreateFlags","RenderPassCreateInfo","ResetCommandBuffer","ResetCommandBuffer","ResetCommandPool","ResetCommandPool","ResetDescriptorPool","ResetDescriptorPool","ResetEvent","ResetEvent","ResetFences","ResetFences","Result","SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER","SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE","SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT","SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE","SAMPLER_ADDRESS_MODE_REPEAT","SAMPLER_MIPMAP_MODE_LINEAR","SAMPLER_MIPMAP_MODE_NEAREST","SAMPLE_COUNT_16_BIT","SAMPLE_COUNT_1_BIT","SAMPLE_COUNT_2_BIT","SAMPLE_COUNT_32_BIT","SAMPLE_COUNT_4_BIT","SAMPLE_COUNT_64_BIT","SAMPLE_COUNT_8_BIT","SHADER_STAGE_ALL","SHADER_STAGE_ALL_GRAPHICS","SHADER_STAGE_COMPUTE_BIT","SHADER_STAGE_FRAGMENT_BIT","SHADER_STAGE_GEOMETRY_BIT","SHADER_STAGE_TESSELLATION_CONTROL_BIT","SHADER_STAGE_TESSELLATION_EVALUATION_BIT","SHADER_STAGE_VERTEX_BIT","SHARING_MODE_CONCURRENT","SHARING_MODE_EXCLUSIVE","SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT","SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT","SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT","SPARSE_MEMORY_BIND_METADATA_BIT","STENCIL_FACE_BACK_BIT","STENCIL_FACE_FRONT_BIT","STENCIL_FRONT_AND_BACK","STENCIL_OP_DECREMENT_AND_CLAMP","STENCIL_OP_DECREMENT_AND_WRAP","STENCIL_OP_INCREMENT_AND_CLAMP","STENCIL_OP_INCREMENT_AND_WRAP","STENCIL_OP_INVERT","STENCIL_OP_KEEP","STENCIL_OP_REPLACE","STENCIL_OP_ZERO","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_GEOMETRY_TYPE_INFO_KHR","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_KHR","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV","STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_KHR","STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR","STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR","STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID","STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID","STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID","STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR","STRUCTURE_TYPE_APPLICATION_INFO","STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2","STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR","STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT","STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR","STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2","STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR","STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT","STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR","STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_KHR","STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV","STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO","STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR","STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO","STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR","STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO","STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR","STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO","STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR","STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR","STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO","STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR","STRUCTURE_TYPE_BIND_SPARSE_INFO","STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR","STRUCTURE_TYPE_BUFFER_COPY_2_KHR","STRUCTURE_TYPE_BUFFER_CREATE_INFO","STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT","STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO","STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT","STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR","STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR","STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER","STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2","STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR","STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO","STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR","STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO","STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT","STRUCTURE_TYPE_CHECKPOINT_DATA_NV","STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO","STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO","STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT","STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO","STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM","STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO","STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO","STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT","STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV","STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR","STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR","STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR","STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR","STRUCTURE_TYPE_COPY_DESCRIPTOR_SET","STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR","STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR","STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR","STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR","STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT","STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT","STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT","STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT","STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT","STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT","STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT","STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT","STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT","STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT","STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV","STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV","STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV","STRUCTURE_TYPE_DEFERRED_OPERATION_INFO_KHR","STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO","STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT","STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO","STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO","STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT","STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO","STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT","STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR","STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO","STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT","STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT","STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT","STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO","STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR","STRUCTURE_TYPE_DEVICE_CREATE_INFO","STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT","STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV","STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT","STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO","STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR","STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO","STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR","STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO","STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR","STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR","STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR","STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO","STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR","STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO","STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR","STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR","STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO","STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR","STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD","STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT","STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT","STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO","STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT","STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2","STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT","STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT","STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR","STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR","STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD","STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR","STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR","STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR","STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT","STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR","STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR","STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR","STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT","STRUCTURE_TYPE_EVENT_CREATE_INFO","STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO","STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR","STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR","STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO","STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR","STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV","STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR","STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV","STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO","STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR","STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR","STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES","STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR","STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES","STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR","STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID","STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES","STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR","STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO","STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR","STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO","STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR","STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV","STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES","STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR","STRUCTURE_TYPE_FENCE_CREATE_INFO","STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR","STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR","STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT","STRUCTURE_TYPE_FORMAT_PROPERTIES_2","STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR","STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR","STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO","STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR","STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO","STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR","STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO","STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV","STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV","STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV","STRUCTURE_TYPE_GEOMETRY_AABB_NV","STRUCTURE_TYPE_GEOMETRY_NV","STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV","STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO","STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV","STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV","STRUCTURE_TYPE_HDR_METADATA_EXT","STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT","STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA","STRUCTURE_TYPE_IMAGE_BLIT_2_KHR","STRUCTURE_TYPE_IMAGE_COPY_2_KHR","STRUCTURE_TYPE_IMAGE_CREATE_INFO","STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT","STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT","STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT","STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO","STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR","STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2","STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR","STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER","STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2","STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR","STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO","STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR","STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR","STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2","STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR","STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO","STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT","STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR","STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX","STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT","STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO","STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX","STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO","STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR","STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID","STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR","STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR","STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR","STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT","STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR","STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV","STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR","STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR","STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV","STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV","STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL","STRUCTURE_TYPE_INSTANCE_CREATE_INFO","STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK","STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO","STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO","STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK","STRUCTURE_TYPE_MAPPED_MEMORY_RANGE","STRUCTURE_TYPE_MAX_ENUM","STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO","STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR","STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO","STRUCTURE_TYPE_MEMORY_BARRIER","STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO","STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR","STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS","STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR","STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR","STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID","STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR","STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR","STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT","STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO","STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR","STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT","STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2","STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR","STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR","STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT","STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT","STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL","STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR","STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR","STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL","STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL","STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR","STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL","STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD","STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO","STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO","STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO","STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO","STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2","STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2","STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2","STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX","STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2","STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV","STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2","STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT","STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES","STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES","STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR","STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT","STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT","STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD","STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV","STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV","STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV","STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT","STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT","STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR","STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR","STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR","STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR","STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR","STRUCTURE_TYPE_PIPELINE_INFO_KHR","STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR","STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT","STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT","STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT","STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD","STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT","STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV","STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT","STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT","STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR","STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT","STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV","STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV","STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV","STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO","STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV","STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV","STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP","STRUCTURE_TYPE_PRESENT_INFO_KHR","STRUCTURE_TYPE_PRESENT_REGIONS_KHR","STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE","STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT","STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO","STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO","STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL","STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR","STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL","STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV","STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2","STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR","STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR","STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV","STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR","STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR","STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV","STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO","STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR","STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO","STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO","STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2","STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR","STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT","STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO","STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR","STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO","STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR","STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT","STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM","STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR","STRUCTURE_TYPE_SAMPLER_CREATE_INFO","STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT","STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO","STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT","STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO","STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR","STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES","STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR","STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO","STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR","STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT","STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO","STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR","STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR","STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO","STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR","STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO","STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR","STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO","STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR","STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO","STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT","STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR","STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2","STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR","STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2","STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR","STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP","STRUCTURE_TYPE_SUBMIT_INFO","STRUCTURE_TYPE_SUBPASS_BEGIN_INFO","STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR","STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2","STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR","STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2","STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR","STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE","STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR","STRUCTURE_TYPE_SUBPASS_END_INFO","STRUCTURE_TYPE_SUBPASS_END_INFO_KHR","STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT","STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT","STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR","STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT","STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR","STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT","STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT","STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR","STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT","STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR","STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD","STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD","STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO","STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR","STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT","STRUCTURE_TYPE_VALIDATION_FEATURES_EXT","STRUCTURE_TYPE_VALIDATION_FLAGS_EXT","STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN","STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR","STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR","STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV","STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR","STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET","STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR","STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV","STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT","STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR","STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR","SUBOPTIMAL_KHR","SUBPASS_CONTENTS_INLINE","SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS","SUBPASS_EXTERNAL","SUCCESS","SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR","SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR","SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR","SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR","SURFACE_TRANSFORM_IDENTITY_BIT_KHR","SURFACE_TRANSFORM_INHERIT_BIT_KHR","SURFACE_TRANSFORM_ROTATE_180_BIT_KHR","SURFACE_TRANSFORM_ROTATE_270_BIT_KHR","SURFACE_TRANSFORM_ROTATE_90_BIT_KHR","SYSTEM_ALLOCATION_SCOPE_CACHE","SYSTEM_ALLOCATION_SCOPE_COMMAND","SYSTEM_ALLOCATION_SCOPE_DEVICE","SYSTEM_ALLOCATION_SCOPE_INSTANCE","SYSTEM_ALLOCATION_SCOPE_OBJECT","SampleCountFlagBits","SampleCountFlags","SampleMask","Sampler","SamplerAddressMode","SamplerCreateFlags","SamplerCreateInfo","SamplerMipmapMode","Semaphore","SemaphoreCreateFlags","SemaphoreCreateInfo","SetDebugUtilsObjectNameEXT","SetDebugUtilsObjectNameEXT","SetEvent","SetEvent","SetMoltenVKDeviceConfigurationMVK","SetMoltenVKDeviceConfigurationMVK","ShaderModule","ShaderModuleCreateFlags","ShaderModuleCreateInfo","ShaderStageFlagBits","ShaderStageFlags","SharingMode","SparseBufferMemoryBindInfo","SparseImageFormatFlagBits","SparseImageFormatFlags","SparseImageFormatProperties","SparseImageFormatProperties2KHR","SparseImageMemoryBind","SparseImageMemoryBindInfo","SparseImageMemoryRequirements","SparseImageOpaqueMemoryBindInfo","SparseMemoryBind","SparseMemoryBindFlagBits","SparseMemoryBindFlags","SpecializationInfo","SpecializationMapEntry","Static","StencilFaceFlagBits","StencilFaceFlags","StencilOp","StencilOpState","StructureType","SubgroupFeatureFlags","SubmitInfo","SubpassContents","SubpassDependency","SubpassDescription","SubpassDescriptionFlags","SubresourceLayout","SurfaceCapabilitiesKHR","SurfaceFormatKHR","SurfaceFullScreenExclusiveInfoEXT","SurfaceKHR","SurfaceTransformFlagBitsKHR","SurfaceTransformFlagsKHR","SwapchainCreateFlagsKHR","SwapchainCreateInfoKHR","SwapchainKHR","SystemAllocationScope","TIMEOUT","TRUE","TrimCommandPoolKHR","TrimCommandPoolKHR","UUID_SIZE","UnmapMemory","UnmapMemory","UpdateDescriptorSetWithTemplateKHR","UpdateDescriptorSetWithTemplateKHR","UpdateDescriptorSets","UpdateDescriptorSets","VERTEX_INPUT_RATE_INSTANCE","VERTEX_INPUT_RATE_VERTEX","VertexInputAttributeDescription","VertexInputBindingDescription","VertexInputRate","ViSurfaceCreateFlagsNN","ViSurfaceCreateInfoNN","Viewport","WHOLE_SIZE","WaitForFences","WaitForFences","WaylandSurfaceCreateFlagsKHR","WaylandSurfaceCreateInfoKHR","Win32SurfaceCreateFlagsKHR","Win32SurfaceCreateInfoKHR","WriteDescriptorSet","XcbSurfaceCreateFlagsKHR","XcbSurfaceCreateInfoKHR","XlibSurfaceCreateFlagsKHR","XlibSurfaceCreateInfoKHR","a","addressModeU","addressModeV","addressModeW","alignment","allocationSize","alphaBlendOp","alphaMode","alphaToCoverageEnable","alphaToOne","alphaToOneEnable","anisotropyEnable","apiVersion","apiVersion","applicationVersion","arrayLayer","arrayLayers","arrayPitch","aspectMask","aspectMask","aspectMask","aspectMask","aspectMask","attachment","attachmentCount","attachmentCount","attachmentCount","averageFrameInterval","averageFramesPerSecond","b","back","baseArrayLayer","baseArrayLayer","baseArrayLayer","baseMipLevel","basePipelineHandle","basePipelineHandle","basePipelineIndex","basePipelineIndex","baseVertexInstanceDrawing","bindCount","bindCount","bindCount","binding","binding","binding","bindingCount","blendConstants","blendEnable","borderColor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","buffer","buffer","buffer","buffer","bufferAlignment","bufferBindCount","bufferDeviceAddress","bufferDeviceAddress","bufferDeviceAddress","bufferDeviceAddress","bufferDeviceAddressCaptureReplay","bufferDeviceAddressCaptureReplay","bufferDeviceAddressCaptureReplay","bufferDeviceAddressCaptureReplay","bufferDeviceAddressMultiDevice","bufferDeviceAddressMultiDevice","bufferDeviceAddressMultiDevice","bufferDeviceAddressMultiDevice","bufferFeatures","bufferImageGranularity","bufferImageHeight","bufferOffset","bufferRowLength","clearValue","clearValueCount","clipped","clone","clone","clone_into","clone_into","cmdBufLabelCount","codeSize","color","color","colorAttachment","colorAttachmentCount","colorBlendOp","colorSpace","colorWriteMask","commandBufferCount","commandBufferCount","commandPool","compareEnable","compareMask","compareOp","compareOp","components","compositeAlpha","connection","constantID","cullMode","currentDisplay","currentExtent","currentStackIndex","currentTransform","dataSize","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dependencyCount","dependencyFlags","depth","depth","depthBiasClamp","depthBiasClamp","depthBiasConstantFactor","depthBiasEnable","depthBiasSlopeFactor","depthBounds","depthBoundsTestEnable","depthClamp","depthClampEnable","depthClipMode","depthCompareOp","depthFailOp","depthPitch","depthStencil","depthTestEnable","depthWriteEnable","description","descriptorBindingPartiallyBound","descriptorBindingPartiallyBound","descriptorBindingPartiallyBound","descriptorBindingSampledImageUpdateAfterBind","descriptorBindingSampledImageUpdateAfterBind","descriptorBindingSampledImageUpdateAfterBind","descriptorBindingStorageBufferUpdateAfterBind","descriptorBindingStorageBufferUpdateAfterBind","descriptorBindingStorageBufferUpdateAfterBind","descriptorBindingStorageImageUpdateAfterBind","descriptorBindingStorageImageUpdateAfterBind","descriptorBindingStorageImageUpdateAfterBind","descriptorBindingStorageTexelBufferUpdateAfterBind","descriptorBindingStorageTexelBufferUpdateAfterBind","descriptorBindingStorageTexelBufferUpdateAfterBind","descriptorBindingUniformBufferUpdateAfterBind","descriptorBindingUniformBufferUpdateAfterBind","descriptorBindingUniformBufferUpdateAfterBind","descriptorBindingUniformTexelBufferUpdateAfterBind","descriptorBindingUniformTexelBufferUpdateAfterBind","descriptorBindingUniformTexelBufferUpdateAfterBind","descriptorBindingUpdateUnusedWhilePending","descriptorBindingUpdateUnusedWhilePending","descriptorBindingUpdateUnusedWhilePending","descriptorBindingVariableDescriptorCount","descriptorBindingVariableDescriptorCount","descriptorBindingVariableDescriptorCount","descriptorCount","descriptorCount","descriptorCount","descriptorCount","descriptorCount","descriptorIndexing","descriptorPool","descriptorSetCount","descriptorSetLayout","descriptorType","descriptorType","descriptorType","descriptorUpdateEntryCount","deviceID","deviceName","deviceType","discreteQueuePriorities","display","display","displayMode","displayMode","displayName","dpy","drawIndirectCount","drawIndirectFirstInstance","driverVersion","dstAccessMask","dstAccessMask","dstAccessMask","dstAccessMask","dstAlphaBlendFactor","dstArrayElement","dstArrayElement","dstArrayElement","dstBinding","dstBinding","dstBinding","dstColorBlendFactor","dstOffset","dstOffset","dstOffset","dstOffsets","dstQueueFamilyIndex","dstQueueFamilyIndex","dstRect","dstSet","dstSet","dstStageMask","dstSubpass","dstSubresource","dstSubresource","dstSubresource","dualSrcBlend","dynamicStateCount","enabledExtensionCount","enabledExtensionCount","enabledLayerCount","enabledLayerCount","engineVersion","extensionName","extent","extent","extent","extent","extent","extent","failOp","fd","features","features","fillModeNonSolid","finalLayout","firstIndex","firstInstance","firstInstance","firstVertex","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","float32","fmt","fmt","fmt","fmt","format","format","format","format","format","format","format","format","formatProperties","formatProperties","fragmentStoresAndAtomics","framebuffer","framebuffer","framebufferColorSampleCounts","framebufferDepthSampleCounts","framebufferNoAttachmentsSampleCounts","framebufferStencilSampleCounts","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","front","frontFace","fullDrawIndexUint32","fullScreenExclusive","g","geometryShader","globalAlpha","handleType","handleType","handleType","handleTypes","handleTypes","handleTypes","heapIndex","height","height","height","height","hinstance","hostQueryReset","hostQueryReset","hostQueryReset","hwnd","image","image","image","image","image","image","imageArrayLayers","imageBindCount","imageColorSpace","imageCubeArray","imageExtent","imageExtent","imageExtent","imageFlipY","imageFormat","imageFormatProperties","imageGranularity","imageLayout","imageMipTailFirstLod","imageMipTailOffset","imageMipTailSize","imageMipTailStride","imageOffset","imageOpaqueBindCount","imageSharingMode","imageSubresource","imageType","imageType","imageType","imageUsage","imageView","imagelessFramebuffer","imagelessFramebuffer","imagelessFramebuffer","implementationVersion","independentBlend","indexCount","indirectDrawing","inheritedQueries","initialDataSize","initialLayout","initialLayout","inputAttachmentCount","inputRate","instanceCount","instanceCount","int32","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","largePoints","lastFrameInterval","layer","layerCount","layerCount","layerCount","layerName","layers","layout","layout","layout","level","levelCount","limits","lineWidth","lineWidthGranularity","lineWidthRange","linearTilingFeatures","load","load","load","load","loadOp","location","logicOp","logicOp","logicOpEnable","magFilter","mapEntryCount","maxAnisotropy","maxArrayLayers","maxBoundDescriptorSets","maxClipDistances","maxColorAttachments","maxCombinedClipAndCullDistances","maxComputeSharedMemorySize","maxComputeWorkGroupCount","maxComputeWorkGroupInvocations","maxComputeWorkGroupSize","maxCullDistances","maxDepth","maxDepthBounds","maxDescriptorSetInputAttachments","maxDescriptorSetSampledImages","maxDescriptorSetSamplers","maxDescriptorSetStorageBuffers","maxDescriptorSetStorageBuffersDynamic","maxDescriptorSetStorageImages","maxDescriptorSetUniformBuffers","maxDescriptorSetUniformBuffersDynamic","maxDrawIndexedIndexValue","maxDrawIndirectCount","maxDstExtent","maxDstPosition","maxExtent","maxFragmentBufferCount","maxFragmentCombinedOutputResources","maxFragmentDualSrcAttachments","maxFragmentInputComponents","maxFragmentOutputAttachments","maxFramebufferHeight","maxFramebufferLayers","maxFramebufferWidth","maxGeometryInputComponents","maxGeometryOutputComponents","maxGeometryOutputVertices","maxGeometryShaderInvocations","maxGeometryTotalOutputComponents","maxImageArrayLayers","maxImageArrayLayers","maxImageCount","maxImageDimension1D","maxImageDimension2D","maxImageDimension3D","maxImageDimensionCube","maxImageExtent","maxInterpolationOffset","maxLod","maxMemoryAllocationCount","maxMipLevels","maxPerStageDescriptorInputAttachments","maxPerStageDescriptorSampledImages","maxPerStageDescriptorSamplers","maxPerStageDescriptorStorageBuffers","maxPerStageDescriptorStorageImages","maxPerStageDescriptorUniformBuffers","maxPerStageResources","maxPushConstantsSize","maxPushDescriptors","maxResourceSize","maxSampleMaskWords","maxSamplerAllocationCount","maxSamplerAnisotropy","maxSamplerLodBias","maxSets","maxSrcExtent","maxSrcPosition","maxStorageBufferRange","maxTessellationControlPerPatchOutputComponents","maxTessellationControlPerVertexInputComponents","maxTessellationControlPerVertexOutputComponents","maxTessellationControlTotalOutputComponents","maxTessellationEvaluationInputComponents","maxTessellationEvaluationOutputComponents","maxTessellationGenerationLevel","maxTessellationPatchSize","maxTexelBufferElements","maxTexelGatherOffset","maxTexelOffset","maxUniformBufferRange","maxVertexBufferCount","maxVertexInputAttributeOffset","maxVertexInputAttributes","maxVertexInputBindingStride","maxVertexInputBindings","maxVertexOutputComponents","maxViewportDimensions","maxViewports","memory","memory","memory","memory","memoryHeapCount","memoryHeaps","memoryOffset","memoryOffset","memoryProperties","memoryRequirements","memoryTypeBits","memoryTypeBits","memoryTypeCount","memoryTypeIndex","memoryTypes","messageIdNumber","messageSeverity","messageType","minDepth","minDepthBounds","minDstExtent","minDstPosition","minFilter","minImageCount","minImageCount","minImageExtent","minImageTransferGranularity","minInterpolationOffset","minLod","minMemoryMapAlignment","minSampleShading","minSrcExtent","minSrcPosition","minStorageBufferOffsetAlignment","minTexelBufferOffsetAlignment","minTexelGatherOffset","minTexelOffset","minUniformBufferOffsetAlignment","mipLevel","mipLevel","mipLevels","mipLodBias","mipmapMode","mipmapPrecisionBits","module","multiDrawIndirect","multiViewport","multiview","multiview","multiview","multiviewGeometryShader","multiviewGeometryShader","multiviewGeometryShader","multiviewTessellationShader","multiviewTessellationShader","multiviewTessellationShader","newLayout","nonCoherentAtomSize","objectCount","objectHandle","objectType","occlusionQueryEnable","occlusionQueryPrecise","offset","offset","offset","offset","offset","offset","offset","offset","offset","offset","offset","offset","oldLayout","oldSwapchain","optimalBufferCopyOffsetAlignment","optimalBufferCopyRowPitchAlignment","optimalTilingFeatures","pApplicationInfo","pApplicationName","pAttachments","pAttachments","pAttachments","pBindings","pBinds","pBinds","pBinds","pBufferBinds","pBufferInfo","pClearValues","pCmdBufLabels","pCode","pColorAttachments","pColorBlendState","pCommandBuffers","pData","pDependencies","pDepthStencilAttachment","pDepthStencilState","pDescriptorUpdateEntries","pDynamicState","pDynamicStates","pEnabledFeatures","pEngineName","pImageBinds","pImageIndices","pImageInfo","pImageOpaqueBinds","pImmutableSamplers","pInheritanceInfo","pInitialData","pInputAssemblyState","pInputAttachments","pLabelName","pMapEntries","pMessage","pMessageIdName","pMultisampleState","pName","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pNext","pObject","pObjectName","pPoolSizes","pPreserveAttachments","pPushConstantRanges","pQueueCreateInfos","pQueueFamilyIndices","pQueueFamilyIndices","pQueueFamilyIndices","pQueueLabels","pQueuePriorities","pRasterizationState","pRectangles","pRegions","pResolveAttachments","pResults","pSampleMask","pScissors","pSetLayouts","pSetLayouts","pSignalSemaphores","pSignalSemaphores","pSpecializationInfo","pStages","pSubpasses","pSwapchains","pTessellationState","pTexelBufferView","pUserData","pUserData","pVertexAttributeDescriptions","pVertexBindingDescriptions","pVertexInputState","pView","pView","pViewportState","pViewports","pWaitDstStageMask","pWaitSemaphores","pWaitSemaphores","pWaitSemaphores","parameters","parameters","passOp","patchControlPoints","performanceLoggingFrameCount","performanceTracking","persistent","persistentContent","pfnAllocation","pfnFree","pfnInternalAllocation","pfnInternalFree","pfnReallocation","pfnUserCallback","physicalDimensions","physicalResolution","pipelineBindPoint","pipelineBindPoint","pipelineCacheUUID","pipelineLayout","pipelineStatistics","pipelineStatistics","pipelineStatisticsQuery","planeIndex","planeReorderPossible","planeStackIndex","pointSizeGranularity","pointSizeRange","polygonMode","poolSizeCount","ppEnabledExtensionNames","ppEnabledExtensionNames","ppEnabledLayerNames","ppEnabledLayerNames","preTransform","prefersDedicatedAllocation","presentMode","preserveAttachmentCount","primitiveRestartEnable","properties","properties","propertyFlags","protectedMemory","protectedMemory","pushConstantRangeCount","pushConstantsAlignment","quadOperationsInAllStages","queryCount","queryFlags","queryType","queueCount","queueCount","queueCreateInfoCount","queueFamilyIndex","queueFamilyIndex","queueFamilyIndexCount","queueFamilyIndexCount","queueFamilyIndexCount","queueFamilyProperties","queueFlags","queueLabelCount","r","range","range","rasterizationSamples","rasterizerDiscardEnable","rect","rectangleCount","reference","refreshRate","renderArea","renderPass","renderPass","renderPass","renderPass","requiresDedicatedAllocation","residencyAlignedMipSize","residencyNonResidentStrict","residencyStandard2DBlockShape","residencyStandard2DMultisampleBlockShape","residencyStandard3DBlockShape","resourceOffset","robustBufferAccess","rowPitch","runtimeDescriptorArray","runtimeDescriptorArray","runtimeDescriptorArray","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sType","sampleCounts","sampleRateShading","sampleShadingEnable","sampledImageColorSampleCounts","sampledImageDepthSampleCounts","sampledImageIntegerSampleCounts","sampledImageStencilSampleCounts","sampler","samplerAnisotropy","samplerFilterMinmax","samplerMirrorClampToEdge","samplerYcbcrConversion","samplerYcbcrConversion","samplerYcbcrConversion","samples","samples","samples","scalarBlockLayout","scalarBlockLayout","scalarBlockLayout","scissorCount","separateDepthStencilLayouts","separateDepthStencilLayouts","separateDepthStencilLayouts","set","setLayoutCount","shaderBufferInt64Atomics","shaderBufferInt64Atomics","shaderBufferInt64Atomics","shaderClipDistance","shaderConversionFlipFragmentY","shaderConversionFlipVertexY","shaderConversionLogging","shaderCullDistance","shaderDrawParameters","shaderDrawParameters","shaderFloat16","shaderFloat16","shaderFloat16","shaderFloat64","shaderImageGatherExtended","shaderInputAttachmentArrayDynamicIndexing","shaderInputAttachmentArrayDynamicIndexing","shaderInputAttachmentArrayDynamicIndexing","shaderInputAttachmentArrayNonUniformIndexing","shaderInputAttachmentArrayNonUniformIndexing","shaderInputAttachmentArrayNonUniformIndexing","shaderInt16","shaderInt64","shaderInt8","shaderInt8","shaderInt8","shaderOutputLayer","shaderOutputViewportIndex","shaderResourceMinLod","shaderResourceResidency","shaderSampledImageArrayDynamicIndexing","shaderSampledImageArrayNonUniformIndexing","shaderSampledImageArrayNonUniformIndexing","shaderSampledImageArrayNonUniformIndexing","shaderSharedInt64Atomics","shaderSharedInt64Atomics","shaderSharedInt64Atomics","shaderStorageBufferArrayDynamicIndexing","shaderStorageBufferArrayNonUniformIndexing","shaderStorageBufferArrayNonUniformIndexing","shaderStorageBufferArrayNonUniformIndexing","shaderStorageImageArrayDynamicIndexing","shaderStorageImageArrayNonUniformIndexing","shaderStorageImageArrayNonUniformIndexing","shaderStorageImageArrayNonUniformIndexing","shaderStorageImageExtendedFormats","shaderStorageImageMultisample","shaderStorageImageReadWithoutFormat","shaderStorageImageWriteWithoutFormat","shaderStorageTexelBufferArrayDynamicIndexing","shaderStorageTexelBufferArrayDynamicIndexing","shaderStorageTexelBufferArrayDynamicIndexing","shaderStorageTexelBufferArrayNonUniformIndexing","shaderStorageTexelBufferArrayNonUniformIndexing","shaderStorageTexelBufferArrayNonUniformIndexing","shaderSubgroupExtendedTypes","shaderSubgroupExtendedTypes","shaderSubgroupExtendedTypes","shaderTessellationAndGeometryPointSize","shaderUniformBufferArrayDynamicIndexing","shaderUniformBufferArrayNonUniformIndexing","shaderUniformBufferArrayNonUniformIndexing","shaderUniformBufferArrayNonUniformIndexing","shaderUniformTexelBufferArrayDynamicIndexing","shaderUniformTexelBufferArrayDynamicIndexing","shaderUniformTexelBufferArrayDynamicIndexing","shaderUniformTexelBufferArrayNonUniformIndexing","shaderUniformTexelBufferArrayNonUniformIndexing","shaderUniformTexelBufferArrayNonUniformIndexing","sharingMode","sharingMode","signalSemaphoreCount","signalSemaphoreCount","size","size","size","size","size","size","size","size","size","size","sparseAddressSpaceSize","sparseBinding","sparseProperties","sparseResidency16Samples","sparseResidency2Samples","sparseResidency4Samples","sparseResidency8Samples","sparseResidencyAliased","sparseResidencyBuffer","sparseResidencyImage2D","sparseResidencyImage3D","specVersion","specVersion","srcAccessMask","srcAccessMask","srcAccessMask","srcAccessMask","srcAlphaBlendFactor","srcArrayElement","srcBinding","srcColorBlendFactor","srcOffset","srcOffset","srcOffset","srcOffsets","srcQueueFamilyIndex","srcQueueFamilyIndex","srcRect","srcSet","srcStageMask","srcSubpass","srcSubresource","srcSubresource","srcSubresource","stage","stage","stageCount","stageFlags","stageFlags","standardSampleLocations","stencil","stencilLoadOp","stencilStoreOp","stencilTestEnable","storageBuffer16BitAccess","storageBuffer16BitAccess","storageBuffer16BitAccess","storageBuffer8BitAccess","storageBuffer8BitAccess","storageBuffer8BitAccess","storageImageSampleCounts","storageInputOutput16","storageInputOutput16","storageInputOutput16","storagePushConstant16","storagePushConstant16","storagePushConstant16","storagePushConstant8","storagePushConstant8","storagePushConstant8","storeOp","strictLines","stride","stride","subPixelInterpolationOffsetBits","subPixelPrecisionBits","subTexelPrecisionBits","subgroupBroadcastDynamicId","subgroupSize","subpass","subpass","subpassCount","subresource","subresourceRange","subresourceRange","supportDisplayContentsScale","supportedAlpha","supportedCompositeAlpha","supportedOperations","supportedStages","supportedTransforms","supportedTransforms","supportedUsageFlags","surface","surface","swapchainCount","swapchainCount","templateType","tessellationShader","textureCompressionASTC_LDR","textureCompressionBC","textureCompressionETC2","tiling","tiling","tiling","timelineSemaphore","timelineSemaphore","timelineSemaphore","timestampComputeAndGraphics","timestampPeriod","timestampValidBits","to_owned","to_owned","topology","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint32","uniformAndStorageBuffer16BitAccess","uniformAndStorageBuffer16BitAccess","uniformAndStorageBuffer16BitAccess","uniformAndStorageBuffer8BitAccess","uniformAndStorageBuffer8BitAccess","uniformAndStorageBuffer8BitAccess","uniformBufferStandardLayout","uniformBufferStandardLayout","uniformBufferStandardLayout","unnormalizedCoordinates","usage","usage","usage","usage","variableMultisampleRate","variablePointers","variablePointers","variablePointers","variablePointersStorageBuffer","variablePointersStorageBuffer","variablePointersStorageBuffer","vendorID","vertexAttributeDescriptionCount","vertexBindingDescriptionCount","vertexCount","vertexOffset","vertexPipelineStoresAndAtomics","viewType","viewportBoundsRange","viewportCount","viewportSubPixelBits","visibleRegion","vulkanMemoryModel","vulkanMemoryModel","vulkanMemoryModel","vulkanMemoryModelAvailabilityVisibilityChains","vulkanMemoryModelAvailabilityVisibilityChains","vulkanMemoryModelAvailabilityVisibilityChains","vulkanMemoryModelDeviceScope","vulkanMemoryModelDeviceScope","vulkanMemoryModelDeviceScope","waitSemaphoreCount","waitSemaphoreCount","waitSemaphoreCount","wideLines","width","width","width","width","window","window","window","window","writeMask","x","x","x","x","y","y","y","y","z","z"],"q":[[0,"vk_sys"],[4805,"std::os::raw"],[4806,"std::os::raw"],[4807,"core::fmt"],[4808,"core::ops::function"],[4809,"core::any"]],"deturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],4],0,[[1,2,3,5,6,7,8],4],0,[[9,10,10,11],4],0,[9,4],0,[[1,2,12,13],4],0,[[1,2,14,15],4],0,[[1,2,16,17,18],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,13,19],4],0,[[1,2,20,18,21],4],0,[[1,2,22,18,21],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,13,23],4],0,[[1,13,24,8,25],26],0,[[1,13,27,28],26],0,[[1,13,29,30,8,8,15,8,8],26],0,[[1,13,20,21,31],26],0,[[1,13,29,32],26],0,[[1,13,8,8,20,21],26],0,[[1,13,22,33,22,33,8,34,35],26],0,[[1,13,8,36,8,37],26],0,[[1,13,22,33,38,8,39],26],0,[[1,13,22,33,40,8,39],26],0,[[1,13,20,20,8,41],26],0,[[1,13,20,22,33,8,42],26],0,[[1,13,22,33,22,33,8,43],26],0,[[1,13,22,33,20,8,42],26],0,[[1,13,24,8,8,20,21,21,44],26],0,[[1,13,8,8,8],26],0,[[1,13,20,21],26],0,[[1,13,8,8,8,8],26],0,[[1,13,8,8,8,45,8],26],0,[[1,13,20,21,8,8],26],0,[[1,13,20,21,8,8],26],0,[[1,13],4],0,[[1,13,24,8],26],0,[[1,13],26],0,[[1,13,8,13],26],0,[[1,13,20,21,21,8],26],0,[[1,13,23],4],0,[[1,13,28],26],0,[[1,13,46,46,47,8,48,8,49,8,50],26],0,[[1,13,30,51,8,8,52],26],0,[[1,13,29,30,8,8,53],26],0,[[1,13,54,30,8,52],26],0,[[1,13,55,46],26],0,[[1,13,24,8,8],26],0,[[1,13,22,33,22,33,8,56],26],0,[[1,13,[58,[57]]],26],0,[[1,13,57,57,57],26],0,[[1,13,57,57],26],0,[[1,13,55,46],26],0,[[1,13,57],26],0,[[1,13,8,8,59],26],0,[[1,13,60,8],26],0,[[1,13,60,8],26],0,[[1,13,60,8],26],0,[[1,13,8,8,61],26],0,[[1,13,20,21,21,8],26],0,[[1,13,8,55,46,46,8,48,8,49,8,50],26],0,[[1,13,62,24,8],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,63,64,17,65],4],0,[[1,2,66,17,20],4],0,[[1,2,67,17,68],4],0,[[1,2,69,17,70],4],0,[[1,2,71,8,72,17,32],4],0,[[9,63,73,17,74],4],0,[[1,2,75,17,76],4],0,[[1,2,77,17,78],4],0,[[1,2,79,17,54],4],0,[[9,80,81,17,2],4],0,[[9,80,82,83,17,84],4],0,[[9,63,85,17,65],4],0,[[1,2,86,17,55],4],0,[[1,2,87,17,7],4],0,[[1,2,88,17,89],4],0,[[1,2,71,8,90,17,32],4],0,[[9,63,91,17,65],4],0,[[1,2,92,17,22],4],0,[[1,2,93,17,94],4],0,[[95,96,17,63],4],0,[[9,63,97,17,65],4],0,[[1,2,98,17,71],4],0,[[1,2,99,17,30],4],0,[[1,2,100,17,24],4],0,[[1,2,101,17,102],4],0,[[1,2,103,17,104],4],0,[[1,2,105,17,6],4],0,[[1,2,106,17,107],4],0,[[1,2,8,108,17,3],4],0,[[1,2,108,17,3],4],0,[[9,63,109,17,65],4],0,[[9,63,110,17,65],4],0,[[9,63,111,17,65],4],0,[[9,63,112,17,65],4],0,[[9,63,113,17,65],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,20,17],26],0,[[1,2,68,17],26],0,[[1,2,70,17],26],0,[[9,63,74,17],4],0,[[1,2,76,17],26],0,[[1,2,78,17],26],0,[[1,2,54,17],26],0,[[1,2,17],26],0,[[1,2,55,17],26],0,[[1,2,7,17],26],0,[[1,2,89,17],26],0,[[1,2,22,17],26],0,[[1,2,94,17],26],0,[[9,63,17],26],0,[[1,2,32,17],26],0,[[1,2,71,17],26],0,[[1,2,30,17],26],0,[[1,2,24,17],26],0,[[1,2,102,17],26],0,[[1,2,104,17],26],0,[[1,2,6,17],26],0,[[1,2,107,17],26],0,[[9,63,65,17],26],0,[[1,2,3,17],26],0,0,0,0,0,0,0,0,0,0,[[1,2],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,13],4],0,0,[[9,80,10,8,114],4],0,[[9,80,8,115],4],0,[[95,10,8,114],4],0,[[95,8,115],4],0,[[9,63,8,80],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,8,116],4],0,0,0,0,0,0,0,0,0,[[1,2,70,8,13],26],0,[[1,2,76,8,15],4],0,[[1,2,18,17],26],0,0,0,[[1,2,117],118],0,[[1,2,20,119],26],0,[[1,2,120,121],26],0,[[1,2,18,21],26],0,[[9,2,10],122],0,[[1,2,8,8,123],26],0,[[9,80,82,8,124],4],0,[[9,80,84,8,125],4],0,[[9,80,8,8,82],4],0,[[1,2,55],4],0,[[1,2,7],4],0,[[1,2,22,119],26],0,[[1,2,126,121],26],0,[[1,2,22,8,127],26],0,[[1,2,22,128,129],26],0,[[130,63,10],122],0,[[1,2,131,45],4],0,[[1,2,132,45,133],4],0,[[9,2,134],4],0,[[9,80,8,135],4],0,[[9,80,8,136],4],0,[[9,80,137],26],0,[[9,80,138],26],0,[[9,80,139,140],26],0,[[9,80,141],26],0,[[9,80,139,142,143,144,145,146],4],0,[[9,80,147,148],4],0,[[9,80,149],26],0,[[9,80,150],26],0,[[9,80,151],4],0,[[9,80,152],26],0,[[9,80,153],26],0,[[9,80,8,154],26],0,[[9,80,8,155],26],0,[[9,80,139,142,156,144,143,8,157],26],0,[[9,80,158,8,159],26],0,[[9,80,65,160],4],0,[[9,80,65,8,161],4],0,[[9,80,65,8,162],4],0,[[9,80,8,65,11],4],0,[[9,80,8,52],11],0,[[9,80,8],11],0,[[9,80,8,52,8],11],0,[[9,80,8,52,8],11],0,[[1,2,71,163,52],4],0,[[1,2,24,8,8,163,52,21,44],4],0,[[1,2,102,164],26],0,[[1,2,3,8,22],4],0,[[9,2,3,165],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,8,116],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,18,21,21,166,52],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,71,8,71],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,123,8,167,7],4],0,0,0,0,0,[[1,123,168],4],0,[[1,123,8,169,7],4],0,[[1,123],4],0,0,0,0,0,[[1,2,3],4],0,0,0,0,0,[[1,13,170],4],0,[[1,2,70,171],4],0,[[1,2,76,172],4],0,[[1,2,55],4],0,[[1,2,8,7],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,173],4],0,[[1,2,55],4],0,[[9,2,134],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,70,174],26],0,0,[[1,2,18],26],0,[[1,2,15,54,52],26],0,[[1,2,8,53,8,175],26],0,0,0,0,0,0,0,0,0,0,[[1,2,8,7,11,5],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[38,38],[40,40],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],176],[[],177],[[],178],[[],179],[[],180],[[],181],[[],182],[[],183],[[],184],[[],185],[[],186],[[],187],[[],188],[[],189],[[],190],[[],191],[[],192],[[],193],[[],194],[[],195],[[],196],[[],197],[[],198],[[],137],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[130,199],[[201,[26,200]]]],[[95,199],[[201,[26,200]]]],[[9,199],[[201,[26,200]]]],[[1,199],[[201,[26,200]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,130,202],[-1,95,202],[-1,9,202],[-1,1,202],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],[-1,[[201,[-2]]],[],[]],0,[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],[-1,203,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"DevicePointers",0],[6,"Device",0],[6,"SwapchainKHR",0],[6,"Result",0],[15,"u64"],[6,"Semaphore",0],[6,"Fence",0],[15,"u32"],[3,"InstancePointers",0],[6,"c_char",4805],[6,"Bool32",0],[3,"CommandBufferAllocateInfo",0],[6,"CommandBuffer",0],[3,"DescriptorSetAllocateInfo",0],[6,"DescriptorSet",0],[3,"MemoryAllocateInfo",0],[3,"AllocationCallbacks",0],[6,"DeviceMemory",0],[3,"CommandBufferBeginInfo",0],[6,"Buffer",0],[6,"DeviceSize",0],[6,"Image",0],[3,"DebugUtilsLabelEXT",0],[6,"QueryPool",0],[6,"QueryControlFlags",0],[15,"tuple"],[3,"RenderPassBeginInfo",0],[6,"SubpassContents",0],[6,"PipelineBindPoint",0],[6,"PipelineLayout",0],[6,"IndexType",0],[6,"Pipeline",0],[6,"ImageLayout",0],[3,"ImageBlit",0],[6,"Filter",0],[3,"ClearAttachment",0],[3,"ClearRect",0],[19,"ClearColorValue",0],[3,"ImageSubresourceRange",0],[3,"ClearDepthStencilValue",0],[3,"BufferCopy",0],[3,"BufferImageCopy",0],[3,"ImageCopy",0],[6,"QueryResultFlags",0],[15,"i32"],[6,"PipelineStageFlags",0],[6,"DependencyFlags",0],[3,"MemoryBarrier",0],[3,"BufferMemoryBarrier",0],[3,"ImageMemoryBarrier",0],[6,"ShaderStageFlags",0],[6,"c_void",4805],[3,"WriteDescriptorSet",0],[6,"DescriptorUpdateTemplateKHR",0],[6,"Event",0],[3,"ImageResolve",0],[15,"f32"],[15,"array"],[3,"Rect2D",0],[6,"StencilFaceFlags",0],[3,"Viewport",0],[6,"PipelineStageFlagBits",0],[6,"Instance",0],[3,"AndroidSurfaceCreateInfoKHR",0],[6,"SurfaceKHR",0],[3,"BufferCreateInfo",0],[3,"BufferViewCreateInfo",0],[6,"BufferView",0],[3,"CommandPoolCreateInfo",0],[6,"CommandPool",0],[6,"PipelineCache",0],[3,"ComputePipelineCreateInfo",0],[3,"DebugUtilsMessengerCreateInfoEXT",0],[6,"DebugUtilsMessengerEXT",0],[3,"DescriptorPoolCreateInfo",0],[6,"DescriptorPool",0],[3,"DescriptorSetLayoutCreateInfo",0],[6,"DescriptorSetLayout",0],[3,"DescriptorUpdateTemplateCreateInfoKHR",0],[6,"PhysicalDevice",0],[3,"DeviceCreateInfo",0],[6,"DisplayKHR",0],[3,"DisplayModeCreateInfoKHR",0],[6,"DisplayModeKHR",0],[3,"DisplaySurfaceCreateInfoKHR",0],[3,"EventCreateInfo",0],[3,"FenceCreateInfo",0],[3,"FramebufferCreateInfo",0],[6,"Framebuffer",0],[3,"GraphicsPipelineCreateInfo",0],[3,"IOSSurfaceCreateInfoMVK",0],[3,"ImageCreateInfo",0],[3,"ImageViewCreateInfo",0],[6,"ImageView",0],[3,"EntryPoints",0],[3,"InstanceCreateInfo",0],[3,"MacOSSurfaceCreateInfoMVK",0],[3,"PipelineCacheCreateInfo",0],[3,"PipelineLayoutCreateInfo",0],[3,"QueryPoolCreateInfo",0],[3,"RenderPassCreateInfo",0],[6,"RenderPass",0],[3,"SamplerCreateInfo",0],[6,"Sampler",0],[3,"SemaphoreCreateInfo",0],[3,"ShaderModuleCreateInfo",0],[6,"ShaderModule",0],[3,"SwapchainCreateInfoKHR",0],[3,"ViSurfaceCreateInfoNN",0],[3,"WaylandSurfaceCreateInfoKHR",0],[3,"Win32SurfaceCreateInfoKHR",0],[3,"XcbSurfaceCreateInfoKHR",0],[3,"XlibSurfaceCreateInfoKHR",0],[3,"ExtensionProperties",0],[3,"LayerProperties",0],[3,"MappedMemoryRange",0],[3,"BufferDeviceAddressInfo",0],[6,"DeviceAddress",0],[3,"MemoryRequirements",0],[3,"BufferMemoryRequirementsInfo2KHR",0],[3,"MemoryRequirements2KHR",0],[6,"PFN_vkVoidFunction",0],[6,"Queue",0],[3,"DisplayModePropertiesKHR",0],[3,"DisplayPlaneCapabilitiesKHR",0],[3,"ImageMemoryRequirementsInfo2KHR",0],[3,"SparseImageMemoryRequirements",0],[3,"ImageSubresource",0],[3,"SubresourceLayout",0],[3,"Static",0],[3,"MemoryGetFdInfoKHR",0],[6,"ExternalMemoryHandleTypeFlagBits",0],[3,"MemoryFdPropertiesKHR",0],[3,"MVKDeviceConfiguration",0],[3,"DisplayPlanePropertiesKHR",0],[3,"DisplayPropertiesKHR",0],[3,"PhysicalDeviceFeatures",0],[6,"PhysicalDeviceFeatures2KHR",0],[6,"Format",0],[3,"FormatProperties",0],[3,"FormatProperties2KHR",0],[6,"ImageType",0],[6,"ImageTiling",0],[6,"ImageUsageFlags",0],[6,"ImageCreateFlags",0],[3,"ImageFormatProperties",0],[3,"PhysicalDeviceImageFormatInfo2KHR",0],[3,"ImageFormatProperties2KHR",0],[3,"PhysicalDeviceMemoryProperties",0],[3,"PhysicalDeviceMemoryProperties2KHR",0],[3,"MVKPhysicalDeviceMetalFeatures",0],[3,"PhysicalDeviceProperties",0],[3,"PhysicalDeviceProperties2KHR",0],[3,"QueueFamilyProperties",0],[3,"QueueFamilyProperties2KHR",0],[6,"SampleCountFlagBits",0],[3,"SparseImageFormatProperties",0],[3,"PhysicalDeviceSparseImageFormatInfo2KHR",0],[3,"SparseImageFormatProperties2KHR",0],[3,"SurfaceCapabilitiesKHR",0],[3,"SurfaceFormatKHR",0],[6,"PresentModeKHR",0],[15,"usize"],[3,"Extent2D",0],[3,"MVKSwapchainPerformance",0],[6,"MemoryMapFlags",0],[3,"BindSparseInfo",0],[3,"PresentInfoKHR",0],[3,"SubmitInfo",0],[6,"CommandBufferResetFlags",0],[6,"CommandPoolResetFlags",0],[6,"DescriptorPoolResetFlags",0],[3,"DebugUtilsObjectNameInfoEXT",0],[6,"CommandPoolTrimFlagsKHR",0],[3,"CopyDescriptorSet",0],[3,"PhysicalDeviceFeatures2",0],[3,"PhysicalDeviceBufferAddressFeaturesEXT",0],[3,"PhysicalDeviceVariablePointersFeatures",0],[3,"PhysicalDeviceShaderAtomicInt64Features",0],[3,"PhysicalDevice8BitStorageFeatures",0],[3,"PhysicalDevice16BitStorageFeatures",0],[3,"PhysicalDeviceShaderFloat16Int8Features",0],[3,"PhysicalDeviceMultiviewFeatures",0],[3,"PhysicalDeviceSamplerYcbcrConversionFeatures",0],[3,"PhysicalDeviceProtectedMemoryFeatures",0],[3,"PhysicalDeviceDescriptorIndexingFeatures",0],[3,"PhysicalDeviceScalarBlockLayoutFeatures",0],[3,"PhysicalDeviceImagelessFramebufferFeatures",0],[3,"PhysicalDeviceUniformBufferStandardLayoutFeatures",0],[3,"PhysicalDeviceShaderSubgroupExtendedTypesFeatures",0],[3,"PhysicalDeviceSeparateDepthStencilLayoutsFeatures",0],[3,"PhysicalDeviceHostQueryResetFeatures",0],[3,"PhysicalDeviceTimelineSemaphoreFeatures",0],[3,"PhysicalDeviceBufferDeviceAddressFeatures",0],[3,"PhysicalDeviceVulkanMemoryModelFeatures",0],[3,"PhysicalDeviceShaderDrawParametersFeatures",0],[3,"PhysicalDeviceVulkan11Features",0],[3,"PhysicalDeviceVulkan12Features",0],[3,"Formatter",4806],[3,"Error",4806],[4,"Result",4807],[8,"FnMut",4808],[3,"TypeId",4809],[3,"ComponentMapping",0],[3,"PipelineColorBlendAttachmentState",0],[3,"PipelineMultisampleStateCreateInfo",0],[3,"ApplicationInfo",0],[3,"ImageSubresourceLayers",0],[3,"AttachmentReference",0],[3,"PipelineColorBlendStateCreateInfo",0],[3,"PipelineDepthStencilStateCreateInfo",0],[3,"SparseBufferMemoryBindInfo",0],[3,"SparseImageOpaqueMemoryBindInfo",0],[3,"SparseImageMemoryBindInfo",0],[3,"VertexInputBindingDescription",0],[3,"VertexInputAttributeDescription",0],[3,"DescriptorSetLayoutBinding",0],[3,"Extent3D",0],[3,"PhysicalDeviceLimits",0],[3,"PhysicalDeviceSparseProperties",0],[3,"MemoryType",0],[3,"MemoryHeap",0],[3,"DeviceQueueCreateInfo",0],[3,"SparseMemoryBind",0],[3,"Offset3D",0],[3,"SparseImageMemoryBind",0],[3,"SpecializationMapEntry",0],[3,"SpecializationInfo",0],[3,"PipelineShaderStageCreateInfo",0],[3,"PipelineVertexInputStateCreateInfo",0],[3,"PipelineInputAssemblyStateCreateInfo",0],[3,"PipelineTessellationStateCreateInfo",0],[3,"Offset2D",0],[3,"PipelineViewportStateCreateInfo",0],[3,"PipelineRasterizationStateCreateInfo",0],[3,"StencilOpState",0],[3,"PipelineDynamicStateCreateInfo",0],[3,"PushConstantRange",0],[3,"DescriptorPoolSize",0],[3,"DescriptorImageInfo",0],[3,"DescriptorBufferInfo",0],[3,"AttachmentDescription",0],[3,"SubpassDescription",0],[3,"SubpassDependency",0],[3,"CommandBufferInheritanceInfo",0],[19,"ClearValue",0],[3,"DispatchIndirectCommand",0],[3,"DrawIndexedIndirectCommand",0],[3,"DrawIndirectCommand",0],[3,"DisplayModeParametersKHR",0],[3,"DisplayPresentInfoKHR",0],[3,"PhysicalDeviceSubgroupProperties",0],[3,"PhysicalDevicePushDescriptorPropertiesKHR",0],[3,"DescriptorUpdateTemplateEntryKHR",0],[3,"MemoryDedicatedRequirementsKHR",0],[3,"MemoryDedicatedAllocateInfoKHR",0],[3,"RectLayerKHR",0],[3,"PresentRegionKHR",0],[3,"PresentRegionsKHR",0],[3,"DebugUtilsMessengerCallbackDataEXT",0],[3,"SurfaceFullScreenExclusiveInfoEXT",0],[3,"ExportMemoryAllocateInfo",0],[3,"ExternalMemoryBufferCreateInfo",0],[3,"ExternalMemoryImageCreateInfo",0],[3,"ImportMemoryFdInfoKHR",0],[6,"PhysicalDeviceBufferDeviceAddressFeaturesKHR",0],[6,"PhysicalDeviceDescriptorIndexingFeaturesEXT",0],[6,"PhysicalDeviceHostQueryResetFeaturesEXT",0],[6,"PhysicalDeviceImagelessFramebufferFeaturesKHR",0],[6,"PhysicalDeviceMultiviewFeaturesKHR",0],[6,"PhysicalDeviceVariablePointersFeaturesKHR",0],[6,"PhysicalDeviceShaderAtomicInt64FeaturesKHR",0],[6,"PhysicalDevice8BitStorageFeaturesKHR",0],[6,"PhysicalDevice16BitStorageFeaturesKHR",0],[6,"PhysicalDeviceShaderFloat16Int8FeaturesKHR",0],[6,"PhysicalDeviceSamplerYcbcrConversionFeaturesKHR",0],[6,"PhysicalDeviceScalarBlockLayoutFeaturesEXT",0],[6,"PhysicalDeviceUniformBufferStandardLayoutFeaturesKHR",0],[6,"PhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR",0],[6,"PhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR",0],[6,"PhysicalDeviceTimelineSemaphoreFeaturesKHR",0],[6,"PhysicalDeviceVulkanMemoryModelFeaturesKHR",0]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
